ara_solver(1,.1)
ara_solver(1,.2)
ara_solver(1,.3)
ara_solver(1,1)
ara_solver(10,1)
ara_solver <- function(x_risk,x_safe){
a <- seq(0,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
ara_solver(10,1)
seq(0,0.2,by=0.001)
x_risk = 10
x_safe = 1
a <- seq(0,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
diff
ara_solver <- function(x_risk,x_safe){
a <- seq(0.001,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
x_risk = 10
x_safe = 1
a <- seq(0,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
diff
a[which.min(diff)]
a[which.min(diff)]
ara_solver(10,1)
ara_solver <- function(x_risk,x_safe){
a <- seq(0.001,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = mapply(ara_solver,risk_amount/10,safe_amount/10))
ara_solver(100,20)
ra_est
ra_est %>% group_by(risk_amount) %>%
summarise(rra_mean = mean(implied_rra),
rra_sd = sd(implied_rra),
ara_mean = mean(implied_ara),
ara_sd = sd(implied_ara)
)
ra_est %>% group_by(risk_amount) %>%
summarise(rra_mean = mean(implied_rra),
rra_sd = sd(implied_rra),
ara_mean = mean(implied_ara)*10,
ara_sd = sd(implied_ara)*10
)
mean(ra_est$implied_rra)
df_time_immed
# mean rra: 0.749
crra <- mean(ra_est$implied_rra)
df_time_immed$u_a_rw <- df_time_immed$a_rw^crra
df_time_immed$u_a_rw <- df_time_immed$a_rw^crra
df_time_immed$u_b_vary_rw <- df_time_immed$b_vary_rw^crra
formula_u1 <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
u_b_vary_rw*factor(b_delay) + factor(pid)")
logit1 <- glm(formula_u1,
data = df_time_immed,
family = binomial(link='logit'))
logit_u1 <- glm(formula_u1,
data = df_time_immed,
family = binomial(link='logit'))
summary(u1)$coef
summary(logit_u1)$coef
summary(logit_u1)$coef[coef_name]
summary(logit_u1)$coef[coef_name,]
fe_logit_u1 <- coef_confint(logit_u1,coef_name = coef_name)
logit_u1 <- glm(formula_u1,
data = df_time_immed,
family = binomial(link='logit'))
fe_logit_u1 <- coef_confint(logit_u1,coef_name = coef_name)
coef_name <- names(logit_u1$coefficients)[-grep('pid',names(logit_u1$coefficients))]
fe_logit_u1 <- coef_confint(logit_u1,coef_name = coef_name)
fe_logit_u1
summary(logit_u1)
summary(logit1)
summary(logit1)
logit_u1$
# ----------------------------------
#       Bias-Reduced Model
# ----------------------------------
# Firth's Bias-Reduced Regression: Immed_Rw_Vary
sample_id <- sample(unique(df_time_immed$pid),10)
logit_u1$aic
logit1$aic
formula_u1 <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
logit_u <- glm(formula_u,
data = df_time_immed,
family = binomial(link='logit'))
logit_u <- glm(formula_u,
data = df_time_immed,
family = binomial(link='logit'))
coef_name <- names(logit_u$coefficients)[-grep('pid',names(logit_u$coefficients))]
fe_logit_u <- coef_confint(logit_u,coef_name = coef_name)
fe_logit_u
logit_u <- glm(formula_u,
data = df_time_immed,
family = binomial(link='logit'))
coef_name <- names(logit_u$coefficients)[-grep('pid',names(logit_u$coefficients))]
fe_logit_u <- coef_confint(logit_u,coef_name = coef_name)
fe_logit_u
summary(logit_u1)
summary(logit_u)
fe_logit_u
df_time_delayed$u_a_rw <- (df_time_delayed$a_rw*10)^crra
df_time_delayed$u_b_vary_rw <- (df_time_delayed$b_vary_rw*10)^crra
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
df_time_delayed$u_a_rw <- (df_time_delayed$a_rw*10)^crra/10
df_time_delayed$u_b_vary_rw <- (df_time_delayed$b_vary_rw*10)^crra/10
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
logit_u <- glm(formula_u,
data = df_time_immed,
family = binomial(link='logit'))
coef_name <- names(logit_u$coefficients)[-grep('pid',names(logit_u$coefficients))]
fe_logit_u <- coef_confint(logit_u,coef_name = coef_name)
fe_logit_u
summary(logit_u)
fe_logit_u
df_time_delayed$u_a_rw <- (df_time_delayed$a_rw*10)^crra/10
df_time_delayed$u_b_vary_rw <- (df_time_delayed$b_vary_rw*10)^crra/10
df_time_delayed$u_a_rw <- (df_time_delayed$a_rw*10)^crra
df_time_delayed$u_b_vary_rw <- (df_time_delayed$b_vary_rw*10)^crra
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
logit_u <- glm(formula_u,
data = df_time_immed,
family = binomial(link='logit'))
coef_name <- names(logit_u$coefficients)[-grep('pid',names(logit_u$coefficients))]
fe_logit_u <- coef_confint(logit_u,coef_name = coef_name)
fe_logit_u
summary(logit_u)
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
logit_u <- glm(formula_u,
data = df_time_delayed,
family = binomial(link='logit'))
df_time_delayed$u_a_rw <- (df_time_delayed$a_rw*10)^crra/10
df_time_delayed$u_b_vary_rw <- (df_time_delayed$b_vary_rw*10)^crra/10
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
logit_u <- glm(formula_u,
data = df_time_delayed,
family = binomial(link='logit'))
coef_name <- names(logit_u$coefficients)[-grep('pid',names(logit_u$coefficients))]
fe_logit_u <- coef_confint(logit_u,coef_name = coef_name)
fe_logit_u
summary(logit_u)
fe_logit_u
fe_logit2
df_time_delayed$u_a_rw <- (df_time_delayed$a_rw*10)^crra/10
df_time_delayed$u_b_vary_rw <- (df_time_delayed$b_vary_rw*10)^crra/10
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
logit_u <- glm(formula_u,
data = df_time_delayed,
family = binomial(link='logit'))
coef_name <- names(logit_u$coefficients)[-grep('pid',names(logit_u$coefficients))]
fe_logit_u <- coef_confint(logit_u,coef_name = coef_name)
fe_logit_u
summary(logit_u)
summary(logit2)
fe_logit_u
df_time_immed$u_a_rw <- (df_time_immed$a_rw*10)^crra/10
df_time_immed$u_b_vary_rw <- (df_time_immed$b_vary_rw*10)^crra/10
formula_u1 <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
u_b_vary_rw*factor(b_delay)+ factor(pid)")
logit_u2 <- glm(formula_u1,
data = df_time_immed,
family = binomial(link='logit'))
logit_u1 <- glm(formula_u1,
data = df_time_immed,
family = binomial(link='logit'))
coef_name <- names(logit_u1$coefficients)[-grep('pid',names(logit_u1$coefficients))]
fe_logit_u1 <- coef_confint(logit_u1,coef_name = coef_name)
fe_logit_u1
# Firth's Bias-Reduced Regression: Immed_Rw_Vary
sample_id <- sample(unique(df_time_immed$pid),20)
sample <- df_time_immed[df_time_immed$pid %in% sample_id,]
firth1 <- logistf(formula1,
data = sample,
family = binomial(link='logit'))
summary(firth1)
# Firth's Bias-Reduced Regression: Delayed_Rw_Vary
sample_id <- sample(unique(df_time_delay$pid),20)
# Firth's Bias-Reduced Regression: Delayed_Rw_Vary
sample_id <- sample(unique(df_time_delayed$pid),20)
sample <- df_time_delayed[df_time_delayed$pid %in% sample_id,]
firth1 <- logistf(formula2,
data = sample,
family = binomial(link='logit'))
firth2 <- logistf(formula2,
data = sample,
family = binomial(link='logit'))
mod2 <- glmer(choice ~ a_rw + b_vary_rw*factor(b_fixed_rw) + (1|pid),
data = df_time_delayed,
family = binomial(link='logit'),
control = glmerControl(optimizer = "bobyqa",calc.derivs = TRUE))
# Gradient information
mod2@optinfo$derivs
# Coefficients
summary(mod2)
confint(mod2, method = "Wald")
fe_logit2
# Firth's Bias-Reduced Regression: Delayed_Rw_Vary
sample_id <- sample(unique(df_time_delayed$pid),20)
sample <- df_time_delayed[df_time_delayed$pid %in% sample_id,]
firth2 <- logistf(formula2,
data = sample,
family = binomial(link='logit'))
sum_firth2 <- summary(firth2)
sum_firth2
sum_firth2$coefficients
coef_name <- names(firth2$coefficients)[-grep('pid',names(firth2$coefficients))]
firth2$coefficients[coef_name]
firth2$model
firth2$flic
firth2$coef
firth2$[coef,ci.upper]
firth2[coef,ci.upper]
firth2['coef','ci.upper']
firth2 %>% select(coef,ci.lower,ci.upper)
firth2[c('coef','ci.lower','ci.upper']
firth2[c('coef','ci.lower','ci.upper')]
summary(firth2)[coef_name]
summary(firth2)
summary(firth2)$Coefficients
summary(firth2)$Coefficients['coef']
summary(firth2)$coefficients['coef']
firth2[c('coef','ci.lower','ci.upper')]
firth2[c('coef','ci.lower','ci.upper'),coef_name]
firth2[c('coef','ci.lower','ci.upper')][coef_name]
firth2
sum_firth2
sum_firth2 <- summary(firth2)
sum_firth2
save(firth2, file = "firth2.RData")
load("E:/Attention_discounting/attention_discount_project/experiment 1/firth2.RData")
load('firth2.RData')
firth2
remove(firth2)
load('firth2.RData')
firth2$coefficients
library(readxl)
library(tidyverse)
library(ggpubr)
library(stringr)
library(lme4)
library(logistf)
library(optimx)
options(digits = 3)
coef_confint <- function(model, coef_name = NULL, conf_level = 0.95){
critical <- qnorm((1 + conf_level) / 2)
if(is.null(coef_name)){
coef_est <- summary(model)[,"Estimate"]
se <- summary(model)$coef[, "Std. Error"]
}else{
coef_est <- summary(model)$coef[coef_name,"Estimate"]
se <- summary(model)$coef[coef_name, "Std. Error"]
}
conf_int <- data.frame(coefficient = coef_est,
std_error = se) %>%
mutate(lower_bound = coefficient - critical*std_error,
upper_bound = coefficient + critical*std_error
)
print(paste0('Confidence level:',conf_level))
return(conf_int)
}
ara_solver <- function(x_risk,x_safe){
a <- seq(0.001,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
# ----------------------------------
#         Load Data
# ----------------------------------
# choice data(N=160)
# Each choice is between option A and option B(labelled by 1 and 2)
df_raw <- read_excel("experiment.1.data.xlsx",sheet = 1)[-1,]
df_raw$duration <- as.numeric(df_raw$`Duration (in seconds)`)
df_raw$prolific_id <- df_raw$PROLIFIC_PID
# Loop and Merge design for intertemporal choices
lm_design <- read_excel("experiment.1.data.xlsx",sheet = 2)
# design for risky choices
risky_design <- read_excel("experiment.1.data.xlsx",sheet = 3)
# Filter data by attention check
# People should choose option B in Q7, and option A in Q8, and spend >3min
cols <- colnames(df_raw)[29:249]
cols_attention_check_1 <- cols[grep("Q7", cols)]
cols_attention_check_2 <- cols[grep("Q8", cols)]
df_filtered <- df_raw %>%
select(c('prolific_id','duration',cols)) %>%
mutate_at(vars(cols),as.numeric)%>%
filter(if_all(cols_attention_check_1, ~ . == 2)) %>%
filter(if_all(cols_attention_check_2, ~ . == 1)) %>%
filter(duration >180) %>%
select(-c(cols_attention_check_1,cols_attention_check_2))
# 157 of the 160 participants pass attention check
nrow(df_filtered)
# Gather data to make each choice occupy a row
# Split choice data into intertemporal choices and risky choices
df_choice <- df_filtered %>%
mutate(pid = factor(1:nrow(df_filtered))) %>%
gather(key = 'question', value = 'choice', -c(pid, prolific_id,duration))
# risky choices: Q10, Q11, Q12
risky_cols <- cols[grep("Q10|Q11|Q12", cols)]
df_risky_choice <- df_choice %>%
filter(question %in% risky_cols) %>%
mutate(row_id = str_extract(question, "(?<=_)(\\d+)$"),
q_id = str_extract(question, "(?<=Q)\\d+")) %>%
mutate_at(vars(c(q_id,row_id)),as.numeric) %>%
group_by(prolific_id,pid,q_id,choice) %>%
summarise(row_id = ifelse(unique(choice) == 1,max(row_id),min(row_id)))%>%
left_join(risky_design) %>%
group_by(prolific_id,pid,risk_amount) %>%
summarise(safe_amount = mean(safe_amount))
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = mapply(ara_solver,risk_amount/10,safe_amount/10))
# RRA yields smaller variance than ARA
ra_est %>% group_by(risk_amount) %>%
summarise(rra_mean = mean(implied_rra),
rra_sd = sd(implied_rra),
ara_mean = mean(implied_ara)*10,
ara_sd = sd(implied_ara)*10
)
# mean rra: 0.749
crra <- mean(ra_est$implied_rra)
# intertemporal choices: Q5 (Immed_Rw_Vary), Q6 (Delayed_Rw_Vary)
df_time_choice <- df_choice %>%
filter(!question %in% risky_cols) %>%
mutate(q_id = str_extract(question, "\\d+(?=_)"),
cond_id = str_extract(question, "(?<=Q)\\d+"),
row_id = str_extract(question, "(?<=_)(\\d+)$")) %>%
mutate_at(vars(c(q_id,cond_id,row_id)),as.numeric) %>%
mutate(choice = choice -1,
cond = ifelse(cond_id==5,'Delayed_Rw_Vary','Immed_Rw_Vary'))%>%
left_join(lm_design, by = c('cond','q_id')) %>%
mutate(b_vary_rw = row_id,
b_fixed_rw = b_fixed_rw *0.1,
a_rw = a_rw *0.1) %>%
select(-c(q_id,cond_id,row_id,question))
df_time_choice
df_time_equiv <- df_time_choice %>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,choice) %>%
summarise(b_vary_rw = ifelse(unique(choice) == 1,max(b_vary_rw,min(b_vary_rw))))%>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw) %>%
summarise(b_vary_rw = mean(b_vary_rw))
df_time_equiv <- df_time_choice %>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,choice) %>%
summarise(b_vary_rw = ifelse(unique(choice) == 1,max(b_vary_rw),min(b_vary_rw))))%>%
df_time_equiv <- df_time_choice %>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,choice) %>%
summarise(b_vary_rw = ifelse(unique(choice) == 1,max(b_vary_rw),min(b_vary_rw)))%>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw) %>%
summarise(b_vary_rw = mean(b_vary_rw))
df_time_equiv
df_time_equiv <- df_time_choice %>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,b_delay,choice) %>%
summarise(b_vary_rw = ifelse(unique(choice) == 1,max(b_vary_rw),min(b_vary_rw)))%>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,b_delay) %>%
summarise(b_vary_rw = mean(b_vary_rw))
df_time_equiv
df_time_equiv <- df_time_choice %>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,b_delay,choice) %>%
summarise(b_vary_rw = ifelse(unique(choice) == 1,max(b_vary_rw),min(b_vary_rw)))%>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,b_delay)
df_time_equiv
df_time_equiv <- df_time_choice %>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,b_delay,choice) %>%
summarise(b_vary_rw = ifelse(unique(choice) == 0,max(b_vary_rw),min(b_vary_rw)))%>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,b_delay)
df_time_equiv
df_time_equiv <- df_time_choice %>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,b_delay,choice) %>%
summarise(b_vary_rw = ifelse(unique(choice) == 0,max(b_vary_rw),min(b_vary_rw)))%>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,b_delay) %>%
summarise(b_vary_rw = mean(b_vary_rw))
df_time_equiv
df_time_equiv %>%
group_by(cond,a_rw,b_fixed_rw,b_delay) %>%
summarise(mean_vary_rw = mean(b_vary_rw),
std_vary_rw = std(b_vary_rw))
df_time_equiv %>%
group_by(cond,a_rw,b_fixed_rw,b_delay) %>%
summarise(mean_vary_rw = mean(b_vary_rw),
std_vary_rw = sd(b_vary_rw))
sum_time_equiv <- df_time_equiv %>%
group_by(cond,a_rw,b_fixed_rw,b_delay) %>%
summarise(mean_vary_rw = mean(b_vary_rw),
std_vary_rw = sd(b_vary_rw))
df_time_immed <- df_time_choice[df_time_choice$cond == 'Immed_Rw_Vary',]
df_time_delayed <- df_time_choice[df_time_choice$cond == 'Delayed_Rw_Vary',]
formula1 <- as.formula("choice ~ a_rw + b_vary_rw*factor(b_fixed_rw) +
b_vary_rw*factor(b_delay) + factor(pid)")
logit1 <- glm(formula1,
data = df_time_immed,
family = binomial(link='logit'))
coef_name <- names(logit1$coefficients)[-grep('pid',names(logit1$coefficients))]
fe_logit1 <- coef_confint(logit1,coef_name = coef_name)
formula2 <- as.formula("choice ~ a_rw + b_vary_rw*factor(b_fixed_rw) + factor(pid)")
logit2 <- glm(formula2,
data = df_time_delayed,
family = binomial(link='logit'))
coef_name <- names(logit2$coefficients)[-grep('pid',names(logit2$coefficients))]
fe_logit2 <- coef_confint(logit2,coef_name = coef_name)
df_time_immed$u_a_rw <- (df_time_immed$a_rw*10)^crra/10
df_time_immed$u_b_vary_rw <- (df_time_immed$b_vary_rw*10)^crra/10
formula_u1 <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
u_b_vary_rw*factor(b_delay)+ factor(pid)")
logit_u1 <- glm(formula_u1,
data = df_time_immed,
family = binomial(link='logit'))
coef_name <- names(logit_u1$coefficients)[-grep('pid',names(logit_u1$coefficients))]
fe_logit_u1 <- coef_confint(logit_u1,coef_name = coef_name)
fe_logit_u1
df_time_delayed$u_a_rw <- (df_time_delayed$a_rw*10)^crra/10
df_time_delayed$u_b_vary_rw <- (df_time_delayed$b_vary_rw*10)^crra/10
formula_u2 <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
logit_u2 <- glm(formula_u2,
data = df_time_delayed,
family = binomial(link='logit'))
coef_name <- names(logit_u2$coefficients)[-grep('pid',names(logit_u2$coefficients))]
fe_logit_u2 <- coef_confint(logit_u2,coef_name = coef_name)
fe_logit_u2
write.csv(df_time_choice,file='intertemporal_choice_obs.csv')
read.csv('intertemporal_choice_obs.csv')
read.csv('intertemporal_choice_obs.csv')[,-1]
df_choice <- read.csv('intertemporal_choice_obs.csv')[,-1]
df_time_immed <- df_choice[df_choice$cond == 'Immed_Rw_Vary',]
# Firth's Bias-Reduced Regression
sample_id <- sample(unique(df_time_immed$pid),20)
sample <- df_time_immed[df_time_immed$pid %in% sample_id,]
formula1 <- as.formula("choice ~ a_rw + b_vary_rw*factor(b_fixed_rw) +
b_vary_rw*factor(b_delay) + factor(pid)")
firth_reg1 <- logistf(formula1,
data = df_time_immed,
family = binomial(link='logit'))
df_time_delayed <- df_choice[df_choice$cond == 'Delayed_Rw_Vary',]
# Firth's Bias-Reduced Regression
sample_id <- sample(unique(df_time_delayed$pid),10)
sample <- df_time_immed[df_time_delayed$pid %in% sample_id,]
formula2 <- as.formula("choice ~ a_rw + b_vary_rw*factor(b_fixed_rw) + factor(pid)")
firth_reg2 <- logistf(formula2,
data = df_time_delayed,
family = binomial(link='logit'))
library(logistf)
df_choice <- read.csv('intertemporal_choice_obs.csv')[,-1]
library(logistf)
df_choice <- read.csv('intertemporal_choice_obs.csv')[,-1]
df_time_delayed <- df_choice[df_choice$cond == 'Delayed_Rw_Vary',]
# Firth's Bias-Reduced Regression
sample_id <- sample(unique(df_time_delayed$pid),10)
sample <- df_time_immed[df_time_delayed$pid %in% sample_id,]
sample <- df_time_delayed[df_time_delayed$pid %in% sample_id,]
formula2 <- as.formula("choice ~ a_rw + b_vary_rw*factor(b_fixed_rw) + factor(pid)")
firth_reg2 <- logistf(formula2,
data = df_time_delayed,
family = binomial(link='logit'),
)
sample
library(lme4)
firth_reg2 <- glm(formula2,
data = df_time_delayed,
family = binomial(link='logit'),
)
firth_reg2
summary(firth_reg2)
firth_reg2 <- logistf(formula2,
data = df_time_delayed,
family = binomial(link='logit'),
)
# Firth's Bias-Reduced Regression
sample_id <- sample(unique(df_time_delayed$pid),5)
sample <- df_time_delayed[df_time_delayed$pid %in% sample_id,]
formula2 <- as.formula("choice ~ a_rw + b_vary_rw*factor(b_fixed_rw) + factor(pid)")
firth_reg2 <- logistf(formula2,
data = df_time_delayed,
family = binomial(link='logit'),
)
# Firth's Bias-Reduced Regression
sample_id <- sample(unique(df_time_delayed$pid),10)
sample <- df_time_delayed[df_time_delayed$pid %in% sample_id,]
formula2 <- as.formula("choice ~ a_rw + b_vary_rw*factor(b_fixed_rw) + factor(pid)")
firth_reg2 <- logistf(formula2,
data = sample,
family = binomial(link='logit'),
)
save(firth_reg2, file = "firth_2.RData")
