library(readxl)
library(tidyverse)
library(ggpubr)
library(stringr)
library(lme4)
library(logistf)
library(optimx)
options(digits = 3)
coef_confint <- function(model, coef_name = NULL, conf_level = 0.95){
critical <- qnorm((1 + conf_level) / 2)
if(is.null(coef_name)){
coef_est <- summary(model)[,"Estimate"]
se <- summary(model)$coef[, "Std. Error"]
}else{
coef_est <- summary(model)$coef[coef_name,"Estimate"]
se <- summary(model)$coef[coef_name, "Std. Error"]
}
conf_int <- data.frame(coefficient = coef_est,
std_error = se) %>%
mutate(lower_bound = coefficient - critical*std_error,
upper_bound = coefficient + critical*std_error
)
print(paste0('Confidence level:',conf_level))
return(conf_int)
}
ara_solver <- function(x_risk,x_safe){
a <- seq(0.001,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
# ----------------------------------
#         Load Data
# ----------------------------------
# choice data(N=160)
# Each choice is between option A and option B(labelled by 1 and 2)
df_raw <- read_excel("experiment.1.data.xlsx",sheet = 1)[-1,]
getwd()
setwd()
setwd('D:/attention/attention_discount_project/experiment_1')
# ----------------------------------
#         Load Data
# ----------------------------------
# choice data(N=160)
# Each choice is between option A and option B(labelled by 1 and 2)
df_raw <- read_excel("experiment.1.data.xlsx",sheet = 1)[-1,]
df_raw$duration <- as.numeric(df_raw$`Duration (in seconds)`)
df_raw$prolific_id <- df_raw$PROLIFIC_PID
# Loop and Merge design for intertemporal choices
lm_design <- read_excel("experiment.1.data.xlsx",sheet = 2)
# design for risky choices
risky_design <- read_excel("experiment.1.data.xlsx",sheet = 3)
# Filter data by attention check
# People should choose option B in Q7, and option A in Q8, and spend >3min
cols <- colnames(df_raw)[29:249]
cols_attention_check_1 <- cols[grep("Q7", cols)]
cols_attention_check_2 <- cols[grep("Q8", cols)]
df_filtered <- df_raw %>%
select(c('prolific_id','duration',cols)) %>%
mutate_at(vars(cols),as.numeric)%>%
filter(if_all(cols_attention_check_1, ~ . == 2)) %>%
filter(if_all(cols_attention_check_2, ~ . == 1)) %>%
filter(duration >180) %>%
select(-c(cols_attention_check_1,cols_attention_check_2))
# 157 of the 160 participants pass attention check
nrow(df_filtered)
# Gather data to make each choice occupy a row
df_choice <- df_filtered %>%
mutate(pid = factor(1:nrow(df_filtered))) %>%
gather(key = 'question', value = 'choice', -c(pid, prolific_id,duration))
# Split choice data into intertemporal choices and risky choices
# risky choices: Q10, Q11, Q12
risky_cols <- cols[grep("Q10|Q11|Q12", cols)]
df_risky_choice <- df_choice %>%
filter(question %in% risky_cols) %>%
mutate(row_id = str_extract(question, "(?<=_)(\\d+)$"),
q_id = str_extract(question, "(?<=Q)\\d+")) %>%
mutate_at(vars(c(q_id,row_id)),as.numeric) %>%
group_by(prolific_id,pid,q_id,choice) %>%
summarise(row_id = ifelse(unique(choice) == 1,max(row_id),min(row_id)))%>%
left_join(risky_design) %>%
group_by(prolific_id,pid,risk_amount) %>%
summarise(safe_amount = mean(safe_amount))
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = mapply(ara_solver,risk_amount/10,safe_amount/10))
# RRA yields smaller variance than ARA
ra_est %>% group_by(risk_amount) %>%
summarise(rra_mean = mean(implied_rra),
rra_sd = sd(implied_rra),
ara_mean = mean(implied_ara)*10,
ara_sd = sd(implied_ara)*10
)
# mean rra: 0.749
crra <- mean(ra_est$implied_rra)
# intertemporal choices: Q5 (Immed_Rw_Vary), Q6 (Delayed_Rw_Vary)
df_time_choice <- df_choice %>%
filter(!question %in% risky_cols) %>%
mutate(q_id = str_extract(question, "\\d+(?=_)"),
cond_id = str_extract(question, "(?<=Q)\\d+"),
row_id = str_extract(question, "(?<=_)(\\d+)$")) %>%
mutate_at(vars(c(q_id,cond_id,row_id)),as.numeric) %>%
mutate(choice = choice -1,
cond = ifelse(cond_id==5,'Delayed_Rw_Vary','Immed_Rw_Vary'))%>%
left_join(lm_design, by = c('cond','q_id')) %>%
mutate(b_vary_rw = row_id,
b_fixed_rw = b_fixed_rw *0.1,
a_rw = a_rw *0.1) %>%
select(-c(q_id,cond_id,row_id,question))
df_time_equiv <- df_time_choice %>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,b_delay,choice) %>%
summarise(b_vary_rw = ifelse(unique(choice) == 0,max(b_vary_rw),min(b_vary_rw)))%>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,b_delay) %>%
summarise(b_vary_rw = mean(b_vary_rw))
df_time_equiv
sum_time_equiv <- df_time_equiv %>%
group_by(cond,a_rw,b_fixed_rw,b_delay) %>%
summarise(mean_vary_rw = mean(b_vary_rw),
std_vary_rw = sd(b_vary_rw))
sum_time_equiv
ggplot(data=sum_time_equiv)+
geom_point(aes(x=fator(b_fixed_rw),y=std_vary_rw,
shape=factor(b_delay),color=factor(a_rw)))+
facet_wrap(vars(cond))
ggplot(data=sum_time_equiv)+
geom_point(aes(x=as.fator(b_fixed_rw),y=std_vary_rw,
shape=as.factor(b_delay),color=as.factor(a_rw)))+
facet_wrap(vars(cond))
ggplot(data=sum_time_equiv)+
geom_point(aes(x=fator(b_fixed_rw),
y=std_vary_rw,
shape=factor(b_delay),
color=factor(a_rw)))+
facet_wrap(vars(cond))
ggplot(data=sum_time_equiv)+
geom_point(aes(x=factor(b_fixed_rw),
y=std_vary_rw,
shape=factor(b_delay),
color=factor(a_rw)))+
facet_wrap(vars(cond))
ggplot(data=sum_time_equiv)+
geom_point(aes(x=factor(b_fixed_rw),
y=std_vary_rw,
shape=factor(b_delay),
color=factor(a_rw)))+
facet_wrap(vars(cond))+
theme_minimal()
ggplot(data=sum_time_equiv)+
geom_point(aes(x=factor(b_fixed_rw),
y=std_vary_rw,
shape=factor(b_delay),
color=factor(a_rw)))+
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv)+
geom_point(aes(x=factor(b_fixed_rw),
y=std_vary_rw,
shape=factor(b_delay),
color=factor(a_rw)))+
geom_line(aes(linetype = interaction(factor(b_delay), factor(a_rw))), size = 1) +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv)+
geom_point(aes(x=factor(b_fixed_rw),
y=std_vary_rw,
shape=factor(b_delay),
color=factor(a_rw)))+
geom_line(aes(linetype = interaction(factor(b_delay), factor(a_rw)))) +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv)+
geom_point(aes(x=factor(b_fixed_rw),
y=std_vary_rw,
group= interaction(factor(b_delay),factor(a_rw))),
color= interaction(factor(b_delay),factor(a_rw))))+
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw,
group= interaction(factor(b_delay),factor(a_rw)),
color= interaction(factor(b_delay),factor(a_rw))))+
geom_point()+
geom_line(aes(linetype = interaction(factor(b_delay), factor(a_rw)))) +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw,
shape= interaction(factor(b_delay),factor(a_rw)),
color= interaction(factor(b_delay),factor(a_rw))))+
geom_point()+
geom_line(aes(linetype = interaction(factor(b_delay), factor(a_rw)))) +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= interaction(factor(b_delay),factor(a_rw)),
color= interaction(factor(b_delay),factor(a_rw))))+
geom_line(aes(linetype = interaction(factor(b_delay), factor(a_rw)))) +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(group= interaction(factor(b_delay),factor(a_rw)),
color= interaction(factor(b_delay),factor(a_rw))))+
geom_line(aes(linetype = interaction(factor(b_delay), factor(a_rw)))) +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= interaction(factor(b_delay),factor(a_rw)),
color= interaction(factor(b_delay),factor(a_rw))))+
geom_line(aes(linetype = interaction(factor(b_delay), factor(a_rw)))) +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)))+
geom_line(aes(linetype = interaction(factor(b_delay), factor(a_rw)))) +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)))+
geom_line(aes(linetype = interaction(b_delay, a_rw))) +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)))+
geom_line(aes(group = interaction(b_delay, a_rw))) +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)))+
geom_line(aes(group = interaction(b_delay, a_rw)),linetype = 'dotdash') +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)))+
geom_line(aes(group = interaction(b_delay, a_rw)),linetype = 'dashed') +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)))+
geom_line(aes(group = interaction(b_delay, a_rw)),
linetype = 'dashed', color = 'grey') +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(color= factor(b_delay),
shape= factor(a_rw)))+
geom_line(aes(group = interaction(b_delay, a_rw)),
linetype = 'dashed', color = 'grey') +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(color= factor(b_delay),
shape= factor(a_rw)),
size = 2)+
geom_line(aes(group = interaction(b_delay, a_rw)),
linetype = 'dashed', color = 'grey') +
facet_wrap(vars(cond))+
theme_bw()
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)),
size = 2)+
geom_line(aes(group = interaction(b_delay, a_rw)),
linetype = 'dashed', color = 'grey') +
facet_wrap(vars(cond))+
scale_shape_discrete(name = "time length of B (month)") +
scale_color_discrete(name = "reward amount of A (Â£)") +
theme_bw(12)
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)),
size = 2)+
geom_line(aes(group = interaction(b_delay, a_rw)),
linetype = 'dashed', color = 'grey') +
facet_wrap(vars(cond))+
labs(x = 'reward amount constant across rows in B')
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)),
size = 2)+
geom_line(aes(group = interaction(b_delay, a_rw)),
linetype = 'dashed', color = 'grey') +
facet_wrap(vars(cond))+
labs(x = 'reward amount constant across rows in B',
y = 'standard deviation of switch point') +
scale_shape_discrete(name = "time length of B (month)") +
scale_color_discrete(name = "reward amount of A (Â£)") +
theme_bw(12)
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)),
size = 2)+
geom_line(aes(group = interaction(b_delay, a_rw)),
linetype = 'dashed', color = 'grey') +
facet_wrap(vars(cond))+
labs(x = 'reward amount constant across rows in B (ÃÂ£10)',
y = 'standard deviation of switch point') +
scale_shape_discrete(name = "time length of B (month)") +
scale_color_discrete(name = "reward amount of A (ÃÂ£10)") +
theme_bw(12)
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)),
size = 2)+
geom_line(aes(group = interaction(b_delay, a_rw)),
linetype = 'dashed', color = 'grey') +
facet_wrap(~cond,
labeller = as_labeller(
c('Immed_Rw_Vary' = 'Immediate reward varies',
'Delayed_Rw_Vary' = 'Delayed reward varies')))+
labs(x = 'reward amount constant across rows in B (ÃÂ£10)',
y = 'standard deviation of switch point') +
scale_shape_discrete(name = "time length of B (month)") +
scale_color_discrete(name = "reward amount of A (ÃÂ£10)") +
theme_bw(12)
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)),
size = 2)+
geom_line(aes(group = interaction(b_delay, a_rw)),
linetype = 'dashed', color = 'grey') +
facet_wrap(~cond,
labeller = as_labeller(
c('Immed_Rw_Vary' = 'Immediate reward varies',
'Delayed_Rw_Vary' = 'Delayed reward varies')))+
labs(x = 'reward amount constant across rows in B (ÃÂ£10)',
y = 'standard deviation of switch point') +
scale_shape_discrete(name = "time length of B (month)") +
scale_color_discrete(name = "reward amount of A (ÃÂ£10)") +
theme_bw(12)+
theme(
legend.position = 'top'
)
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)),
size = 2)+
geom_line(aes(group = interaction(b_delay, a_rw)),
linetype = 'dashed', color = 'grey') +
facet_wrap(~cond,
labeller = as_labeller(
c('Immed_Rw_Vary' = 'Immediate reward varies',
'Delayed_Rw_Vary' = 'Delayed reward varies')))+
labs(x = 'reward amount constant across rows in B (ÃÂ£10)',
y = 'standard deviation of switch point') +
scale_shape_discrete(name = "time length of B (month)") +
scale_color_discrete(name = "reward amount of A (ÃÂ£10)") +
theme_bw(12)+
theme(
legend.position = 'top',
legend.key.width = unit(0.3, "cm"),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title.y = element_text(margin = margin(r = 8)),
text = element_text(family = "Times New Roman")
)
ggsave('fig_std_switch.png',device = 'png',width = 18, height = 10, units = 'cm')
ggsave('fig_std_switch.png',device = 'png',width = 12, height = 10, units = 'cm')
ggsave('fig_std_switch.png',device = 'png',width = 16, height = 10, units = 'cm')
ggsave('fig_std_switch.png',device = 'png',width = 18, height = 10, units = 'cm')
ggsave('fig_std_switch.png',device = 'png',width = 17, height = 10, units = 'cm')
ggsave('fig_std_switch.png',device = 'png',width = 17, height = 9, units = 'cm')
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)),
size = 2)+
geom_line(aes(group = interaction(b_delay, a_rw)),
linetype = 'dashed', color = 'grey') +
facet_wrap(~cond,
labeller = as_labeller(
c('Immed_Rw_Vary' = 'Immediate reward varies',
'Delayed_Rw_Vary' = 'Delayed reward varies')))+
labs(x = 'reward amount constant across rows in B (ÃÂ£10)',
y = 'standard deviation') +
scale_shape_discrete(name = "time length of B (month)") +
scale_color_discrete(name = "reward amount of A (ÃÂ£10)") +
theme_bw(12)+
theme(
legend.position = 'top',
legend.key.width = unit(0.3, "cm"),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title.y = element_text(margin = margin(r = 8)),
text = element_text(family = "Times New Roman")
)
ggsave('fig_std_switch.png',device = 'png',width = 17, height = 9, units = 'cm')
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)),
size = 2)+
geom_line(aes(group = interaction(b_delay, a_rw)),
linetype = 'dashed', color = 'grey') +
facet_wrap(~cond,
labeller = as_labeller(
c('Immed_Rw_Vary' = 'Immediate reward varies',
'Delayed_Rw_Vary' = 'Delayed reward varies')))+
labs(x = 'reward amount constant across rows in B (ÃÂ£10)',
y = 'standard deviation') +
scale_shape_discrete(name = "Time length of B (month)") +
scale_color_discrete(name = "Reward amount of A (ÃÂ£10)") +
theme_bw(12)+
theme(
legend.position = 'top',
legend.key.width = unit(0.3, "cm"),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title.y = element_text(margin = margin(r = 8)),
text = element_text(family = "Times New Roman")
)
ggsave('fig_std_switch.png',device = 'png',width = 17, height = 9, units = 'cm')
ggsave('fig_std_switch.png',device = 'png',width = 18, height = 9, units = 'cm')
