q_id = str_extract(question, "(?<=Q)\\d+")) %>%
mutate_at(vars(c(q_id,row_id)),as.numeric) %>%
group_by(prolific_id,pid,q_id,choice) %>%
summarise(switch_point = ifelse(unique(choice) == 1,max(row_id),min(row_id)))%>%
left_join(risky_design)
df_risky_choice <- df_choice %>%
filter(question %in% risky_cols) %>%
mutate(row_id = str_extract(question, "(?<=_)(\\d+)$"),
q_id = str_extract(question, "(?<=Q)\\d+")) %>%
mutate_at(vars(c(q_id,row_id)),as.numeric) %>%
group_by(prolific_id,pid,q_id,choice) %>%
summarise(row_id = ifelse(unique(choice) == 1,max(row_id),min(row_id)))%>%
left_join(risky_design)
df_risky_choice
df_risky_choice <- df_choice %>%
filter(question %in% risky_cols) %>%
mutate(row_id = str_extract(question, "(?<=_)(\\d+)$"),
q_id = str_extract(question, "(?<=Q)\\d+")) %>%
mutate_at(vars(c(q_id,row_id)),as.numeric) %>%
group_by(prolific_id,pid,q_id,choice) %>%
summarise(row_id = ifelse(unique(choice) == 1,max(row_id),min(row_id)))%>%
left_join(risky_design) %>%
group_by(prolific_id,pid,risk_amount) %>%
summarise(safe_amount = mean(safe_amount))
df_risky_choice
df_risky_choice %>% mutate(implied_rra = log(0.5,base = safe_amount/risk_amount))
rra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount))
rra_est$implied_rra
ggplot(data = rra_est)+
geom_histogram(aes(x=implied_rra))
ggplot(data = rra_est)+
geom_histogram(aes(x=implied_rra,color=risk_amount))
rra_est
ggplot(data = rra_est)+
geom_histogram(aes(x=implied_rra,fill=risk_amount))
ggplot(data = rra_est)+
geom_histogram(aes(x=implied_rra,group=risk_amount))
ggplot(data = rra_est)+
geom_histogram(aes(x=implied_rra,group=risk_amount))
ggplot(data = rra_est)+
geom_bar(aes(x=implied_rra,group=risk_amount))
ggplot(data = rra_est)+
geom_histogram(aes(x=implied_rra,group=risk_amount))
ggplot(data = rra_est)+
geom_histogram(aes(x=implied_rra,fill=risk_amount))
ggplot(data = rra_est)+
geom_histogram(aes(x=implied_rra,fill=factor(risk_amount)))
rra_est
rra_est %>% group_by(risk_amount) %>%
summarise(rra_mean = mean(implied_rra),
rra_var = var(implied_rra))
rra_est %>% group_by(risk_amount) %>%
summarise(rra_mean = mean(implied_rra),
rra_sd = sd(implied_rra))
u_diff_ara <- function(a,x_risk,x_safe){
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- 0.5*u_risk - u_safe
return(diff)
}
uniroot(u_diff_ara(a,x_risk=100,x_safe=20), interval = c(0, 10))
uniroot(function(a)u_diff_ara(a,x_risk=100,x_safe=20), interval = c(0, 10))
u_diff_ara <- function(a,x_risk,x_safe){
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- 0.5*u_risk - u_safe
return(diff)
}
uniroot(function(a)u_diff_ara(a,x_risk=100,x_safe=20), interval = c(0, 1))
uniroot(function(a){u_diff_ara(a,x_risk=100,x_safe=20)}, interval = c(0, 1))
uniroot(function(a) u_diff_ara(a,x_risk=100,x_safe=10), interval = c(0, 1))
1-exp(-100)
1-exp(-20)
exp(-20)
uniroot(function(a) u_diff_ara(a,x_risk=100,x_safe=10), interval = c(0, 100))
1-exp(-200)
uniroot(function(a) u_diff_ara(a,x_risk=100,x_safe=10), interval = c(0, 1))
1-exp(-1)
uniroot(function(a) u_diff_ara(a,x_risk=10,x_safe=1), interval = c(0, 1))
ara_solver <- function(x_risk,x_safe){
a <- seq(0,1,by=0.01)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- 0.5*u_risk - u_safe
return(diff)
}
ara_solver(x_risk=100,x_safe=10)
ara_solver <- function(x_risk,x_safe){
a <- seq(0,0.2,by=0.01)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- 0.5*u_risk - u_safe
return(diff)
}
ara_solver(x_risk=100,x_safe=10)
a <- seq(0,0.1,by=0.01)
u_risk <- 1-exp(-a*x_risk)
ara_solver <- function(x_risk,x_safe){
a <- seq(0,0.1,by=0.01)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- 0.5*u_risk - u_safe
return(diff)
}
ara_solver(x_risk=100,x_safe=10)
ara_solver <- function(x_risk,x_safe){
a <- seq(0,0.1,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- 0.5*u_risk - u_safe
return(diff)
}
ara_solver(x_risk=100,x_safe=10)
ara_solver <- function(x_risk,x_safe){
a <- seq(0,0.1,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- 0.5*u_risk - u_safe
which.min(abs(diff))
}
ara_solver(x_risk=100,x_safe=10)
ara_solver <- function(x_risk,x_safe){
a <- seq(0,0.1,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
which.min(diff)
}
ara_solver(x_risk=100,x_safe=10)
1-exp(-1)
1-exp(-10)
ara_solver <- function(x_risk,x_safe){
a <- seq(0.001,0.1,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
ara_solver(x_risk=100,x_safe=10)
ara_solver(x_risk=100,x_safe=20)
ara_solver(x_risk=100,x_safe=50)
ara_solver <- function(x_risk,x_safe){
a <- seq(0.001,1,by=0.01)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
ara_solver(x_risk=100,x_safe=50)
ara_solver(x_risk=100,x_safe=5)
ara_solver <- function(x_risk,x_safe){
a <- seq(0.001,1,by=0.01)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
ara_solver <- function(x_risk,x_safe){
a <- seq(0.001,1,by=0.01)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
ara_solver <- function(x_risk,x_safe){
a <- seq(0.01,1,by=0.01)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
a <- seq(0,1,by=0.01)
ara_solver <- function(x_risk,x_safe){
a <- seq(0,1,by=0.01)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
remove(rra_est)
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = ara_solver(risk_amount,safe_amount))
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = apply(ara_solver,risk_amount,safe_amount))
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = lapply(ara_solver,risk_amount,safe_amount))
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = lapply(ara_solver,risk_amount,safe_amount))
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = lapply(ara_solver,x_risk=risk_amount,x_safe=safe_amount))
?lapply
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = sapply(ara_solver,x_risk=risk_amount,x_safe=safe_amount))
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = ara_solver(x_risk=risk_amount,x_safe=safe_amount))
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = mapply(ara_solver,risk_amount,safe_amount))
ra_est
ara_solver <- function(x_risk,x_safe){
a <- seq(0,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = mapply(ara_solver,risk_amount,safe_amount))
ra_est
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = mapply(ara_solver,risk_amount/10,safe_amount/10))
ra_est
ara_solver(100,20)
1-exp(1)
1-exp(-1)
1-exp(-10)
1-exp(-1)
1-exp(-.1)
1-exp(-1)
1-exp(-2)
ara_solver <- function(x_risk,x_safe){
a <- seq(0,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
ara_solver(10,1)
ara_solver <- function(x_risk,x_safe){
a <- seq(0,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
ara_solver(10,1)
1-exp(-10)
1-exp(-1)
1-exp(-0.1)
ara_solver(1,.1)
ara_solver(1,.2)
ara_solver(1,.3)
ara_solver(1,1)
ara_solver(10,1)
ara_solver <- function(x_risk,x_safe){
a <- seq(0,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
ara_solver(10,1)
seq(0,0.2,by=0.001)
x_risk = 10
x_safe = 1
a <- seq(0,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
diff
ara_solver <- function(x_risk,x_safe){
a <- seq(0.001,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
x_risk = 10
x_safe = 1
a <- seq(0,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
diff
a[which.min(diff)]
a[which.min(diff)]
ara_solver(10,1)
ara_solver <- function(x_risk,x_safe){
a <- seq(0.001,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = mapply(ara_solver,risk_amount/10,safe_amount/10))
ara_solver(100,20)
ra_est
ra_est %>% group_by(risk_amount) %>%
summarise(rra_mean = mean(implied_rra),
rra_sd = sd(implied_rra),
ara_mean = mean(implied_ara),
ara_sd = sd(implied_ara)
)
ra_est %>% group_by(risk_amount) %>%
summarise(rra_mean = mean(implied_rra),
rra_sd = sd(implied_rra),
ara_mean = mean(implied_ara)*10,
ara_sd = sd(implied_ara)*10
)
mean(ra_est$implied_rra)
df_time_immed
# mean rra: 0.749
crra <- mean(ra_est$implied_rra)
df_time_immed$u_a_rw <- df_time_immed$a_rw^crra
df_time_immed$u_a_rw <- df_time_immed$a_rw^crra
df_time_immed$u_b_vary_rw <- df_time_immed$b_vary_rw^crra
formula_u1 <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
u_b_vary_rw*factor(b_delay) + factor(pid)")
logit1 <- glm(formula_u1,
data = df_time_immed,
family = binomial(link='logit'))
logit_u1 <- glm(formula_u1,
data = df_time_immed,
family = binomial(link='logit'))
summary(u1)$coef
summary(logit_u1)$coef
summary(logit_u1)$coef[coef_name]
summary(logit_u1)$coef[coef_name,]
fe_logit_u1 <- coef_confint(logit_u1,coef_name = coef_name)
logit_u1 <- glm(formula_u1,
data = df_time_immed,
family = binomial(link='logit'))
fe_logit_u1 <- coef_confint(logit_u1,coef_name = coef_name)
coef_name <- names(logit_u1$coefficients)[-grep('pid',names(logit_u1$coefficients))]
fe_logit_u1 <- coef_confint(logit_u1,coef_name = coef_name)
fe_logit_u1
summary(logit_u1)
summary(logit1)
summary(logit1)
logit_u1$
# ----------------------------------
#       Bias-Reduced Model
# ----------------------------------
# Firth's Bias-Reduced Regression: Immed_Rw_Vary
sample_id <- sample(unique(df_time_immed$pid),10)
logit_u1$aic
logit1$aic
formula_u1 <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
logit_u <- glm(formula_u,
data = df_time_immed,
family = binomial(link='logit'))
logit_u <- glm(formula_u,
data = df_time_immed,
family = binomial(link='logit'))
coef_name <- names(logit_u$coefficients)[-grep('pid',names(logit_u$coefficients))]
fe_logit_u <- coef_confint(logit_u,coef_name = coef_name)
fe_logit_u
logit_u <- glm(formula_u,
data = df_time_immed,
family = binomial(link='logit'))
coef_name <- names(logit_u$coefficients)[-grep('pid',names(logit_u$coefficients))]
fe_logit_u <- coef_confint(logit_u,coef_name = coef_name)
fe_logit_u
summary(logit_u1)
summary(logit_u)
fe_logit_u
df_time_delayed$u_a_rw <- (df_time_delayed$a_rw*10)^crra
df_time_delayed$u_b_vary_rw <- (df_time_delayed$b_vary_rw*10)^crra
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
df_time_delayed$u_a_rw <- (df_time_delayed$a_rw*10)^crra/10
df_time_delayed$u_b_vary_rw <- (df_time_delayed$b_vary_rw*10)^crra/10
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
logit_u <- glm(formula_u,
data = df_time_immed,
family = binomial(link='logit'))
coef_name <- names(logit_u$coefficients)[-grep('pid',names(logit_u$coefficients))]
fe_logit_u <- coef_confint(logit_u,coef_name = coef_name)
fe_logit_u
summary(logit_u)
fe_logit_u
df_time_delayed$u_a_rw <- (df_time_delayed$a_rw*10)^crra/10
df_time_delayed$u_b_vary_rw <- (df_time_delayed$b_vary_rw*10)^crra/10
df_time_delayed$u_a_rw <- (df_time_delayed$a_rw*10)^crra
df_time_delayed$u_b_vary_rw <- (df_time_delayed$b_vary_rw*10)^crra
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
logit_u <- glm(formula_u,
data = df_time_immed,
family = binomial(link='logit'))
coef_name <- names(logit_u$coefficients)[-grep('pid',names(logit_u$coefficients))]
fe_logit_u <- coef_confint(logit_u,coef_name = coef_name)
fe_logit_u
summary(logit_u)
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
logit_u <- glm(formula_u,
data = df_time_delayed,
family = binomial(link='logit'))
df_time_delayed$u_a_rw <- (df_time_delayed$a_rw*10)^crra/10
df_time_delayed$u_b_vary_rw <- (df_time_delayed$b_vary_rw*10)^crra/10
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
logit_u <- glm(formula_u,
data = df_time_delayed,
family = binomial(link='logit'))
coef_name <- names(logit_u$coefficients)[-grep('pid',names(logit_u$coefficients))]
fe_logit_u <- coef_confint(logit_u,coef_name = coef_name)
fe_logit_u
summary(logit_u)
fe_logit_u
fe_logit2
df_time_delayed$u_a_rw <- (df_time_delayed$a_rw*10)^crra/10
df_time_delayed$u_b_vary_rw <- (df_time_delayed$b_vary_rw*10)^crra/10
formula_u <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
+ factor(pid)")
logit_u <- glm(formula_u,
data = df_time_delayed,
family = binomial(link='logit'))
coef_name <- names(logit_u$coefficients)[-grep('pid',names(logit_u$coefficients))]
fe_logit_u <- coef_confint(logit_u,coef_name = coef_name)
fe_logit_u
summary(logit_u)
summary(logit2)
fe_logit_u
df_time_immed$u_a_rw <- (df_time_immed$a_rw*10)^crra/10
df_time_immed$u_b_vary_rw <- (df_time_immed$b_vary_rw*10)^crra/10
formula_u1 <- as.formula("choice ~ u_a_rw + u_b_vary_rw*factor(b_fixed_rw) +
u_b_vary_rw*factor(b_delay)+ factor(pid)")
logit_u2 <- glm(formula_u1,
data = df_time_immed,
family = binomial(link='logit'))
logit_u1 <- glm(formula_u1,
data = df_time_immed,
family = binomial(link='logit'))
coef_name <- names(logit_u1$coefficients)[-grep('pid',names(logit_u1$coefficients))]
fe_logit_u1 <- coef_confint(logit_u1,coef_name = coef_name)
fe_logit_u1
# Firth's Bias-Reduced Regression: Immed_Rw_Vary
sample_id <- sample(unique(df_time_immed$pid),20)
sample <- df_time_immed[df_time_immed$pid %in% sample_id,]
firth1 <- logistf(formula1,
data = sample,
family = binomial(link='logit'))
summary(firth1)
# Firth's Bias-Reduced Regression: Delayed_Rw_Vary
sample_id <- sample(unique(df_time_delay$pid),20)
# Firth's Bias-Reduced Regression: Delayed_Rw_Vary
sample_id <- sample(unique(df_time_delayed$pid),20)
sample <- df_time_delayed[df_time_delayed$pid %in% sample_id,]
firth1 <- logistf(formula2,
data = sample,
family = binomial(link='logit'))
firth2 <- logistf(formula2,
data = sample,
family = binomial(link='logit'))
mod2 <- glmer(choice ~ a_rw + b_vary_rw*factor(b_fixed_rw) + (1|pid),
data = df_time_delayed,
family = binomial(link='logit'),
control = glmerControl(optimizer = "bobyqa",calc.derivs = TRUE))
# Gradient information
mod2@optinfo$derivs
# Coefficients
summary(mod2)
confint(mod2, method = "Wald")
fe_logit2
# Firth's Bias-Reduced Regression: Delayed_Rw_Vary
sample_id <- sample(unique(df_time_delayed$pid),20)
sample <- df_time_delayed[df_time_delayed$pid %in% sample_id,]
firth2 <- logistf(formula2,
data = sample,
family = binomial(link='logit'))
sum_firth2 <- summary(firth2)
sum_firth2
sum_firth2$coefficients
coef_name <- names(firth2$coefficients)[-grep('pid',names(firth2$coefficients))]
firth2$coefficients[coef_name]
firth2$model
firth2$flic
firth2$coef
firth2$[coef,ci.upper]
firth2[coef,ci.upper]
firth2['coef','ci.upper']
firth2 %>% select(coef,ci.lower,ci.upper)
firth2[c('coef','ci.lower','ci.upper']
firth2[c('coef','ci.lower','ci.upper')]
summary(firth2)[coef_name]
summary(firth2)
summary(firth2)$Coefficients
summary(firth2)$Coefficients['coef']
summary(firth2)$coefficients['coef']
firth2[c('coef','ci.lower','ci.upper')]
firth2[c('coef','ci.lower','ci.upper'),coef_name]
firth2[c('coef','ci.lower','ci.upper')][coef_name]
firth2
sum_firth2
sum_firth2 <- summary(firth2)
sum_firth2
save(firth2, file = "firth2.RData")
load("E:/Attention_discounting/attention_discount_project/experiment 1/firth2.RData")
load('firth2.RData')
firth2
remove(firth2)
load('firth2.RData')
firth2$coefficients
