x
sum(x)
skew(x)
skewness(x)
mean(x)
x-mean(x)
(x-mean(x))^3
std(x)
sd(x)
sd(x)^3
mean((x-mean(x))^3)/sd(x)^3
x = (exp(rnorm(10000)/100)-1)
mean((x-mean(x))^3)/sd(x)^3
x = (exp(rnorm(10000)/100)-1)
mean((x-mean(x))^3)/sd(x)^3
x = (exp(rnorm(100000)/100)-1)
mean((x-mean(x))^3)/sd(x)^3
x = (exp(rnorm(10000)/100)-1)
mean((x-mean(x))^3)/sd(x)^3
x = (exp(rnorm(10000)/100)-1)
mean((x-mean(x))^3)/sd(x)^3
matrix(x,nrow=100)
mapply(mean,matrix(x,nrow=100))
?mapply
apply(matrix(x,nrow=100),MARGIN = 1,mean)
apply(matrix(x,nrow=100),MARGIN = 1,sum)
apply(matrix(x,nrow=100),MARGIN = 1,sum)
y = apply(matrix(x,nrow=100),MARGIN = 1,sum)
x = (exp(rnorm(10000)/100)-1)
y = apply(matrix(x,nrow=100),MARGIN = 1,sum)
skew_x = mean((x-mean(x))^3)/sd(x)^3
skew_y = mean((y-mean(y))^3)/sd(y)^3
skew_y
skew_y/ skew_x
x = (exp(rnorm(10000)/100)-1)
y = apply(matrix(x,nrow=100),MARGIN = 1,sum)
skew_x = mean((x-mean(x))^3)/sd(x)^3
skew_x
skew_y
count(x)
length(x)
x = (exp(rnorm(10000)/100)-1)
y = apply(matrix(x,nrow=100),MARGIN = 1,sum)
skew_x = sum((x-mean(x))^3)/sd(x)^3/(length(x)-1)
skew_y = sum((y-mean(y))^3)/sd(y)^3/(length(y)-1)
skew_y/ skew_x
skew_y
x = (exp(rnorm(10000*12)/100)-1)
y = apply(matrix(x,nrow=12),MARGIN = 1,sum)
skew_x = sum((x-mean(x))^3)/sd(x)^3/(length(x)-1)
y
y = apply(matrix(x,nrow=12),MARGIN = 2,sum)
y
skew_x = sum((x-mean(x))^3)/sd(x)^3/(length(x)-1)
skew_y = sum((y-mean(y))^3)/sd(y)^3/(length(y)-1)
skew_y/skew_x
r = c()
for(i in 1:10000){
x = (exp(rnorm(10000*12)/100)-1)
y = apply(matrix(x,nrow=12),MARGIN = 2,sum)
skew_x = sum((x-mean(x))^3)/sd(x)^3/(length(x)-1)
skew_y = sum((y-mean(y))^3)/sd(y)^3/(length(y)-1)
r = c(r,skew_y/skew_x)
}
mod(10)
10 % 10
10 %% 10
101 %% 10
for(i in 1:1000){
x = (exp(rnorm(10000*12)/100)-1)
y = apply(matrix(x,nrow=12),MARGIN = 2,sum)
skew_x = sum((x-mean(x))^3)/sd(x)^3/(length(x)-1)
skew_y = sum((y-mean(y))^3)/sd(y)^3/(length(y)-1)
r = c(r,skew_y/skew_x)
if(i %% 100 == 0){
print(i)
}
}
r
mean(r)
1/sqrt(12)
0.52/sqrt(12)
data <- read_excel(file_path, sheet = sheet_name)
library(readxl)
file_path <- "E:/Attention_discounting/mydata.xlsx"
sheet_name <- "intertemporal_results"
data <- read_excel(file_path, sheet = sheet_name)
file_path <- "E:/Attention_discounting/pilot_4_data_20240114.xlsx"
sheet_name <- "intertemporal_results"
data <- read_excel(file_path, sheet = sheet_name)
file_path <- "E:/Attention_discounting/mydata/pilot_4_data_20240114.xlsx"
sheet_name <- "intertemporal_results"
data <- read_excel(file_path, sheet = sheet_name)
data
data <- read_excel(file_path, sheet = sheet_name)[1:,]
data <- read_excel(file_path, sheet = sheet_name)[-1,]
data
data <- read_excel(file_path, sheet = sheet_name)[,-1]
data
columns(data)
View(data)
# 移除 indiff_point 大于 500 的观测值
data_filtered <- data[data$indiff_point <= 500, ]
# 跑线性回归模型
model <- lm(value_surplus ~ front_amount + factor(worker_id) + factor(seq_length), data = data_filtered)
# 查看回归结果
summary(model)
# 跑线性回归模型
model <- lm(value_surplus ~ front_amount:seq_length + factor(worker_id), data = data_filtered)
# 查看回归结果
summary(model)
library(readxl)
file_path <- "E:/Attention_discounting/mydata/pilot_4_data_20240114.xlsx"
sheet_name <- "intertemporal_results"
data <- read_excel(file_path, sheet = sheet_name)[,-1]
# remove outlier
data_filtered <- data[data$indiff_point <= 500, ]
# linear regression - fixed intercept
model <- lm(value_surplus ~ front_amount:seq_length + factor(worker_id), data = data_filtered)
# result
summary(model)
?pnorm
qnorm(0.975)
qnorm(1-sig.level/2)
sig.level <- 0.05
power <- 0.7
qnorm(1-sig.level/2)
qnorm(1-sig.level/2)+qnorm(1-power)
library(readxl)
file_path <- "E:/Attention_discounting/mydata/pilot_4_data_20240114.xlsx"
sheet_name <- "intertemporal_results"
data <- read_excel(file_path, sheet = sheet_name)[,-1]
# remove outlier
data_filtered <- data[data$indiff_point <= 500, ]
# linear regression - fixed intercept
model <- lm(value_surplus ~ front_amount:seq_length + factor(worker_id), data = data_filtered)
# result
summary(model)
summary(model)@coef
summary(model)$coef
summary(model)$coef[-1,]
summary(model)$coef[:1,]
summary(model)$coef[:-1,]
summary(model)$coef[1:-1,]
summary(model)$coef[-1:1,]
summary(model)$coef[1:1,]
summary(model)$coef[-1,]
summary(model)$coef[-1:2,]
summary(model)$coef[-1:-2,]
coef <- summary(model)$coef
shape(coef)
nrow(coef)
coef[nrow(coef)-1:nrow(coef),]
coef
coef[nrow(coef)-1:nrow(coef),]
summary(model)$coef
summary(model)$coef[-1:1,]
summary(model)$coef[1:-1,]
summary(model)$coef[0:-1,]
summary(model)$coef[1:-1,]
summary(model)$coef[0:-1,]
summary(model)$coef[0:1,]
summary(model)$coef[-1:0,]
coef[(nrow(coef)-1):nrow(coef),]
coef[(nrow(coef)-1):nrow(coef),1]
coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]
((qnorm(1-sig.level/2)+qnorm(1-power))/(-4.338711))^2
coef[(nrow(coef)-1):nrow(coef),1]/
coef[(nrow(coef)-1):nrow(coef),2]
coef[(nrow(coef)-1):nrow(coef),1]/
coef[(nrow(coef)-1):nrow(coef),2]
coef[(nrow(coef)-1):nrow(coef),1]/
coef[(nrow(coef)-1):nrow(coef),3]
coef[(nrow(coef)-1):nrow(coef),1]/
coef[(nrow(coef)-1):nrow(coef),]
coef[(nrow(coef)-1):nrow(coef),]
coef[(nrow(coef)-1):nrow(coef),]$Estimate
coef[(nrow(coef)-1):nrow(coef),1]
coef[(nrow(coef)-1):nrow(coef),2]
coef[(nrow(coef)-1):nrow(coef),1]/
0.03887042/ 0.008958978
0.03887042/ 0.008958978
((qnorm(1-sig.level/2)+qnorm(1-power))/(-4.338711))^2
coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20)
((qnorm(1-sig.level/2)+qnorm(1-power))/(-0.9701653))^2
((qnorm(1-sig.level/2)+qnorm(1-power))/(-0.9157449))^2
coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20)
coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20)
coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*12-20+1)
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*12-20+1)
min(low)
min(abs(low))
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*12-20+1)
low <-min(abs(low))
up <- qnorm(1-sig.level/2)+qnorm(1-power)
(up/low)^2
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*12)
low <-min(abs(low))
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*12)
low <-min(abs(low))
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*12)
low <-min(abs(low))
up <- qnorm(1-sig.level/2)+qnorm(1-power)
(up/low)^2
sig.level <- 0.05
power <- 0.8
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*12)
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*12)
low <-min(abs(low))
up <- qnorm(1-sig.level/2)+qnorm(1-power)
(up/low)^2
sig.level <- 0.05
power <- 0.8
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*12)
low <-min(abs(low))
up <- qnorm(1-sig.level/2)+qnorm(1-power)
(up/low)^2
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*12-20)
low <-min(abs(low))
up <- qnorm(1-sig.level/2)+qnorm(1-power)
(up/low)^2
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*14)
low <-min(abs(low))
up <- qnorm(1-sig.level/2)+qnorm(1-power)
(up/low)^2
sig.level <- 0.01
power <- 0.8
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*14)
low <- min(abs(low))
up <- qnorm(1-sig.level/2)+qnorm(1-power)
(up/low)^2
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*14-20)
low <- min(abs(low))
up <- qnorm(1-sig.level/2)+qnorm(1-power)
(up/low)^2
sig.level <- 0.05
power <- 0.8
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*14)
low <- min(abs(low))
up <- qnorm(1-sig.level/2)+qnorm(1-power)
(up/low)^2
sig.level <- 0.05
power <- 0.8
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*14)
low <- min(abs(low))
up <- qnorm(1-sig.level/2)+qnorm(1-power)
(up/low)^2
sig.level <- 0.05
power <- 0.8
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*14)
low <- min(abs(low))
up <- qnorm(1-sig.level/2)+qnorm(1-power)
(up/low)^2
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*13)
low <- min(abs(low))
up <- qnorm(1-sig.level/2)+qnorm(1-power)
(up/low)^2
low <- coef[(nrow(coef)-1):nrow(coef),1]/coef[(nrow(coef)-1):nrow(coef),2]/sqrt(20*15)
low <- min(abs(low))
up <- qnorm(1-sig.level/2)+qnorm(1-power)
(up/low)^2
library(haven)
read_dta('C:/Users/zarkwang/Desktop/GPS_dataset_country_level/country.dta')
df_gps <- read_dta('C:/Users/zarkwang/Desktop/GPS_dataset_country_level/country.dta')
View(df_gps)
load("E:/Attention_discounting/data/Lab_visual_attention_intertemporal/data_itc_description/Study 1/fixLocAndfixTime.RData")
load("E:/Attention_discounting/data/Lab_visual_attention_intertemporal/data_itc_description/Study 1/fixLocAndfixTime.RData")
View(fixTime)
View(itch_test)
14 * 157
```{=tex}
# Reference
1.8/60
2.2/60
setwd('C:/Users/zarkwang/OneDrive/Discounting_Experiment_ZWang/experiment_3')
library(tidyverse)
library(lme4)
df <- read.csv('choice_data.csv')
df
View(df)
model <- glmer(y ~ C(single_amount) + C(front_ratio) + (part_value | group) + (1 | group:worker_id), data = data, family = binomial)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) + (part_value | group) + (1 | group:worker_id), data = data, family = binomial)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
(part_value | group) + (1 | group:worker_id),
data = df, family = binomial)
same_y <- data %>%
group_by(worker_id) %>%
summarise(unique_y = n_distinct(choice_value)) %>%
filter(unique_y == 1) %>%
pull(worker_id)
same_y <- df %>%
group_by(worker_id) %>%
summarise(unique_y = n_distinct(choice_value)) %>%
filter(unique_y == 1) %>%
pull(worker_id)
same_y
length(same_y)
df_filtered <- df %>%
filter(!worker_id %in% same_y)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
(part_value | group) + (1 | group:worker_id),
data = df_filtered, family = binomial)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
part_value + (1| group) + (1 | group:worker_id),
data = df_filtered, family = binomial)
summary(model)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
+ (part_value + 1| group) + (1 | group:worker_id),
data = df_filtered, family = binomial)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
+ (part_value| group),
data = df_filtered, family = binomial)
summary(model)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
+ part_value: group,
data = df_filtered, family = binomial)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
+ part_value : group + (1|group),
data = df_filtered, family = binomial)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
+ part_value : group + (1|group),
data = df_filtered, family = binomial)
summary(model)
model <- glm(choice_value ~ C(single_amount) + C(front_ratio) +
+ part_value:group,
data = df_filtered, family = binomial)
summary(model)
model <- glm(choice_value ~ C(single_amount) + C(front_ratio) +
+ part_value:group,
data = df, family = binomial)
summary(model)
model <- glm(choice_value ~ C(single_amount) + C(front_ratio) +
group_value + I((group_value==0)*part_value) + I((group_value==1)*part_value),
data = df, family = binomial)
model <- glm(choice_value ~ C(single_amount) + C(front_ratio) +
group_value + I((group_value==F)*part_value) + I((group_value==T)*part_value),
data = df, family = binomial)
model <- glm(choice_value ~ C(single_amount) + C(front_ratio) +
group_value + I((group_value==F)*part_value) + I((group_value==T)*part_value),
data = df, family = binomial)
model <- glm(choice_value ~ C(single_amount) + C(front_ratio) +
group_value + I((group_value==F)*int(part_value)) + I((group_value==T)*part_value),
data = df, family = binomial)
model <- glm(choice_value ~ C(single_amount) + C(front_ratio) +
group_value + I((group_value==F)*as.numeric(part_value))                                part_value) +
model <- glm(choice_value ~ C(single_amount) + C(front_ratio) +
group_value + I((group_value==F)*as.numeric(part_value)) +                               part_value) +
I((group_value==T)*part_value),
model <- glm(choice_value ~ C(single_amount) + C(front_ratio) +
group_value +
I((group_value==F)*as.numeric(part_value)) +                               part_value) +
I((group_value==T)*as.numeric(part_value)) ,
model <- glm(choice_value ~ C(single_amount) + C(front_ratio) +
group_value +
I((group_value==F)*as.numeric(part_value)) +                               part_value) +
I((group_value==T)*as.numeric(part_value)),
model <- glm(choice_value ~ C(single_amount) + C(front_ratio) +
group_value +
I((group_value==F)*as.numeric(part_value)) +                               part_value) +
I((group_value==T)*as.numeric(part_value))
model <- glm(choice_value ~ C(single_amount) + C(front_ratio) +
group_value +
I((group_value==F)*as.numeric(part_value)) +                               part_value) +
I((group_value==T)*as.numeric(part_value)),
model <- glm(choice_value ~ C(single_amount) + C(front_ratio)
+ group_value +
+ I((group_value==F)*as.numeric(part_value))
+ I((group_value==T)*as.numeric(part_value)),
data = df, family = binomial)
model <- glm(choice_value ~ C(single_amount) + C(front_ratio) +
group_value +
I((group_value==F)*as.numeric(part_value)) +
I((group_value==T)*as.numeric(part_value)),
data = df, family = binomial)
model <- glm(choice_value ~ factor(single_amount) + factor(front_ratio) +
group_value +
I((group_value==F)*as.numeric(part_value)) +
I((group_value==T)*as.numeric(part_value)),
data = df, family = binomial)
model <- glm(choice_value ~ factor(single_amount) + factor(front_ratio) +
group_value
data = df, family = binomial)
model <- glm(choice_value ~ factor(single_amount) + factor(front_ratio) +
group_value,
data = df, family = binomial)
summary(model)
model <- glm(choice_value ~ factor(single_amount) + factor(front_ratio) +
group_value + part_value*group,
data = df, family = binomial)
summary(model)
model <- glm(choice_value ~ factor(single_amount) + factor(front_ratio) +
part_value*group,
data = df, family = binomial)
summary(model)
model <- glm(choice_value ~ factor(single_amount) + factor(front_ratio) +
part_value:group,
data = df, family = binomial)
summary(model)
model <- glm(choice_value ~ factor(single_amount) + factor(front_ratio) +
group,
data = df, family = binomial)
summary(model)
df$group_control <- (df$group_value==F)*df$part_value
df$group_control <- (df$group_value==F)*as.numeric(df$part_value)
df$group_control <- (df$group_value==F)*df$part_value
df$group_control <- (df$group_value==0)*df$part_value
data$group_value <- as.numeric(data$group_value)
df$group_value <- as.numeric(df$group_value)
df$group_value <- as.numeric(df$group_value)
df$part_value <- as.numeric(df$part_value)
df <- read.csv('choice_data.csv')
df$group_value <- as.numeric(df$group_value)
View(df)
df <- read.csv('choice_data.csv')
df$group_value
df$group_value <- as.numeric(data$group_value == "True")
df$group_value <- as.numeric(df$group_value == "True")
df$part_value <- as.numeric(df$part_value == "True")
df$group_control <- (df$group_value==0)*df$part_value
df <- read.csv('choice_data.csv')
df$group_value <- as.numeric(df$group_value == "True")
df$part_value <- as.numeric(df$part_value == "True")
df$question_control <- (df$group_value==0)*df$part_value
df$question_treat <- (df$group_value==1)*df$part_value
same_y <- df %>%
group_by(worker_id) %>%
summarise(unique_y = n_distinct(choice_value)) %>%
filter(unique_y == 1) %>%
pull(worker_id)
df_filtered <- df %>%
filter(!worker_id %in% same_y)
model <- glm(choice_value ~ factor(single_amount) + factor(front_ratio) +
group + question_control + question_treat,
data = df, family = binomial)
summary(model)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
+ question_control + question_treat + (1|group),
data = df, family = binomial)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
+ question_control + question_treat + (1|group),
data = df_filtered, family = binomial)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
+ question_control + question_treat + group,
data = df_filtered, family = binomial)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
+ question_control + question_treat + (1|group),
data = df_filtered, family = binomial)
summary(model)
model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
+ question_control + question_treat + (1|group/worker_id),
data = df_filtered, family = binomial)
re_model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
+ question_control + question_treat + (1|group/worker_id),
data = df_filtered, family = binomial)
summary(re_model)
summary(re_model)$re
fe_model <- glm(choice_value ~ factor(single_amount) + factor(front_ratio) +
group + question_control + question_treat + factor(worker_id),
data = df, family = binomial)
summary(re_model)
summary(fe_model)
fe_model <- glm(choice_value ~ + factor(worker_id) + factor(single_amount) + factor(front_ratio) +
group + question_control + question_treat ,
data = df, family = binomial)
summary(fe_model)
fe_model <- glm(choice_value ~ group + question_control + question_treat +
factor(single_amount) + factor(front_ratio) +
factor(worker_id) + ,
fe_model <- glm(choice_value ~ group + question_control + question_treat +
factor(single_amount) + factor(front_ratio) +
factor(worker_id),
data = df, family = binomial)
summary(fe_model)
re_model <- glmer(choice_value ~ C(single_amount) + C(front_ratio) +
+ question_control + question_treat + group + (1|group:worker_id),
data = df_filtered, family = binomial)
re_model <- glmer(choice_value ~ question_control + question_treat + group
+ C(single_amount) + C(front_ratio) +
+ (1|group:worker_id),
data = df_filtered, family = binomial)
re_model <- glmer(choice_value ~ question_control + question_treat + group +
C(single_amount) + C(front_ratio) + (1|group:worker_id),
data = df_filtered, family = binomial)
summary(fe_model)
summary(re_model)
re_model <- glmer(choice_value ~ question_control + question_treat + group +
C(single_amount) + C(front_ratio) + (1|group:worker_id),
data = df, family = binomial)
summary(re_model)
pool_model <- glm(choice_value ~ part_value*group +
C(single_amount) + C(front_ratio),
data = df, family = binomial)
summary(pool_model)
pool_model <- glm(choice_value ~ question_control + question_treat + group +
C(single_amount) + C(front_ratio),
data = df, family = binomial)
summary(pool_model)
summary(re_model)
re_model <- glmer(choice_value ~ question_control + question_treat + (1|group) +
C(single_amount) + C(front_ratio) + (1|group:worker_id),
data = df, family = binomial)
summary(re_model)
fe_model <- glm(choice_value ~ group + question_control + question_treat +
factor(single_amount) + factor(front_ratio) +
factor(worker_id),
data = df, family = binomial)
summary(fe_model)
library(clubSandwich)
install.packages("clubSandwich")
library(clubSandwich)
cse <- clusterSEs(re_model, cluster = "worker_id")
library(sandwich)
