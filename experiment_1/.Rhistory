theme(
legend.position = 'top',
#legend.box = "vertical",
#legend.spacing.y = unit(-0.2, "cm"),
legend.key.width = unit(0, "cm"),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title.y = element_text(margin = margin(r = 8)),
text = element_text(family = "Times New Roman")
)
ggsave('./figures/fig_switch_sd.png',device = 'png',width = 18, height = 9, units = 'cm')
source("E:/Attention_discounting/attention_discount_project/experiment_1/make_fig_tab.R")
source("E:/Attention_discounting/attention_discount_project/experiment_1/make_fig_tab.R")
row_mod
source("E:/Attention_discounting/attention_discount_project/experiment_1/make_fig_tab.R")
source("E:/Attention_discounting/attention_discount_project/experiment_1/make_fig_tab.R")
row_mod
source("E:/Attention_discounting/attention_discount_project/experiment_1/make_fig_tab.R")
source('tables/insert_table.py')
source("E:/Attention_discounting/attention_discount_project/experiment_1/make_fig_tab.R")
library(readxl)
library(tidyverse)
library(stringr)
library(lme4)
options(digits = 3)
coef_confint <- function(model, coef_name = NULL, conf_level = 0.95){
critical <- qnorm((1 + conf_level) / 2)
if(is.null(coef_name)){
coef_est <- summary(model)[,"Estimate"]
se <- summary(model)$coef[, "Std. Error"]
p_value <- summary(model)$coef[, "Pr(>|z|)"]
}else{
coef_est <- summary(model)$coef[coef_name,"Estimate"]
se <- summary(model)$coef[coef_name, "Std. Error"]
p_value <- summary(model)$coef[coef_name, "Pr(>|z|)"]
}
conf_int <- data.frame(coef = coef_est,
bse = se,
p_value = p_value) %>%
mutate(lower_bound = coef - critical*bse,
upper_bound = coef + critical*bse
)
print(paste0('Confidence level:',conf_level))
return(conf_int)
}
ara_solver <- function(x_risk,x_safe){
a <- seq(0.001,0.2,by=0.001)
u_risk <- 1-exp(-a*x_risk)
u_safe <- 1-exp(-a*x_safe)
diff <- abs(0.5*u_risk - u_safe)
a[which.min(diff)]
}
# ----------------------------------
#         Load Data
# ----------------------------------
# choice data(N=160)
# Each choice is between option A and option B(labelled by 1 and 2)
df_raw <- read_excel("experiment.1.data.xlsx",sheet = 1)[-1,]
df_raw$duration <- as.numeric(df_raw$`Duration (in seconds)`)
df_raw$prolific_id <- df_raw$PROLIFIC_PID
# Loop and Merge design for intertemporal choices
lm_design <- read_excel("experiment.1.data.xlsx",sheet = 2)
# design for risky choices
risky_design <- read_excel("experiment.1.data.xlsx",sheet = 3)
# Filter data by attention check
# People should choose option B in Q7, and option A in Q8, and spend >3min
cols <- colnames(df_raw)[29:249]
cols_attention_check_1 <- cols[grep("Q7", cols)]
cols_attention_check_2 <- cols[grep("Q8", cols)]
df_filtered <- df_raw %>%
select(c('prolific_id','duration',cols)) %>%
mutate_at(vars(cols),as.numeric)%>%
filter(if_all(cols_attention_check_1, ~ . == 2)) %>%
filter(if_all(cols_attention_check_2, ~ . == 1)) %>%
filter(duration >180) %>%
select(-c(cols_attention_check_1,cols_attention_check_2))
# 157 of the 160 participants pass attention check
nrow(df_filtered)
# Gather data to make each choice occupy a row
df_choice <- df_filtered %>%
mutate(pid = factor(1:nrow(df_filtered))) %>%
gather(key = 'question', value = 'choice', -c(pid, prolific_id,duration))
# Split choice data into intertemporal choices and risky choices
# risky choices: Q10, Q11, Q12
risky_cols <- cols[grep("Q10|Q11|Q12", cols)]
df_risky_choice <- df_choice %>%
filter(question %in% risky_cols) %>%
mutate(row_id = str_extract(question, "(?<=_)(\\d+)$"),
q_id = str_extract(question, "(?<=Q)\\d+")) %>%
mutate_at(vars(c(q_id,row_id)),as.numeric) %>%
group_by(prolific_id,pid,q_id,choice) %>%
summarise(row_id = ifelse(unique(choice) == 1,max(row_id),min(row_id)))%>%
left_join(risky_design) %>%
group_by(prolific_id,pid,risk_amount) %>%
summarise(safe_amount = mean(safe_amount))
ra_est <- df_risky_choice %>%
mutate(implied_rra = log(0.5,base = safe_amount/risk_amount),
implied_ara = mapply(ara_solver,risk_amount/10,safe_amount/10))
# RRA yields smaller variance than ARA
ra_est %>% group_by(risk_amount) %>%
summarise(rra_mean = mean(implied_rra),
rra_sd = sd(implied_rra),
ara_mean = mean(implied_ara)*10,
ara_sd = sd(implied_ara)*10
)
# mean rra: 0.749
crra <- mean(ra_est$implied_rra)
# intertemporal choices: Q5 (Immed_Rw_Vary), Q6 (Delayed_Rw_Vary)
df_time_choice <- df_choice %>%
filter(!question %in% risky_cols) %>%
mutate(q_id = str_extract(question, "\\d+(?=_)"),
cond_id = str_extract(question, "(?<=Q)\\d+"),
row_id = str_extract(question, "(?<=_)(\\d+)$")) %>%
mutate_at(vars(c(q_id,cond_id,row_id)),as.numeric) %>%
mutate(choice = choice -1,
cond = ifelse(cond_id==5,'Delayed_Rw_Vary','Immed_Rw_Vary'))%>%
left_join(lm_design, by = c('cond','q_id')) %>%
mutate(b_vary_rw = row_id,
b_fixed_rw = b_fixed_rw *0.1,
a_rw = a_rw *0.1) %>%
select(-c(q_id,cond_id,row_id,question))
# plot the variance of choice for each question
df_time_equiv <- df_time_choice %>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,b_delay,choice) %>%
summarise(b_vary_rw = ifelse(unique(choice) == 0,max(b_vary_rw),min(b_vary_rw)))%>%
group_by(prolific_id,pid,cond,a_rw,b_fixed_rw,b_delay) %>%
summarise(b_vary_rw = mean(b_vary_rw))
sum_time_equiv <- df_time_equiv %>%
mutate(a_rw = a_rw*10,
b_fixed_rw = b_fixed_rw*10,
b_vary_rw = b_vary_rw*10) %>%
group_by(cond,a_rw,b_fixed_rw,b_delay) %>%
summarise(mean_vary_rw = mean(b_vary_rw),
std_vary_rw = sd(b_vary_rw))
ggplot(data=sum_time_equiv,
aes(x=factor(b_fixed_rw),
y=std_vary_rw))+
geom_point(aes(shape= factor(b_delay),
color= factor(a_rw)),
size = 2)+
geom_line(aes(group = interaction(b_delay, a_rw)),
linetype = 'dashed', color = 'grey') +
facet_wrap(~cond,
labeller = as_labeller(
c('Immed_Rw_Vary' = 'Immediate reward varies',
'Delayed_Rw_Vary' = 'Delayed reward varies')))+
labs(x = 'the amount constant across rows in option B (£)',
y = 'standard deviation') +
scale_shape_discrete(name = "time length of option B (month)") +
scale_color_discrete(name = "option A (£)") +
theme_bw(12)+
theme(
legend.position = 'top',
#legend.box = "vertical",
#legend.spacing.y = unit(-0.2, "cm"),
legend.key.width = unit(0, "cm"),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title.y = element_text(margin = margin(r = 8)),
text = element_text(family = "Times New Roman")
)
ggsave('./figures/fig_switch_sd.png',device = 'png',width = 18, height = 9, units = 'cm')
# construct datasets for regression
df_time_immed <- df_time_choice[df_time_choice$cond == 'Immed_Rw_Vary',]
df_time_delayed <- df_time_choice[df_time_choice$cond == 'Delayed_Rw_Vary',]
formula1 <- as.formula("choice ~ a_rw + b_vary_rw*factor(b_fixed_rw) +
b_vary_rw*factor(b_delay) + factor(pid)")
logit1 <- glm(formula1,
data = df_time_immed,
family = binomial(link='logit'))
coef_name1 <- names(logit1$coefficients)[-grep('pid',names(logit1$coefficients))]
fe_logit1 <- coef_confint(logit1,coef_name = coef_name1)
df_time_immed$pred_logit <- predict(logit1,type='response')
formula2 <- as.formula("choice ~ a_rw + b_vary_rw*factor(b_fixed_rw) + factor(pid)")
source("E:/Attention_discounting/attention_discount_project/experiment_1/make_fig_tab.R")
source("E:/Attention_discounting/attention_discount_project/experiment_1/make_fig_tab.R")
source("E:/Attention_discounting/attention_discount_project/experiment_1/make_fig_tab.R")
source("E:/Attention_discounting/attention_discount_project/experiment_1/make_fig_tab.R")
fe_logit1
source('reg_analysis.R')
logit1$aic
logit2$aic
print(logit2$aic)
round(logit2$aic,3)
summary(logit2)
summary(logit2)$aic
logit_u2$aic
logit_u2
logit_u2$aic
logit_u2
print(logit_u2$aic)
round(logit_u2,5)
round(logit_u2$aic,5)
round(logit_u2$aic,1)
logit2$aic - logit_u2$aic
float(logit2$aic)
logit2$aic*10
logit2$aic*100
logit2$aic*1000
logit1$aic
logit1$aic*100
library(tidyverse)
library(ggpubr)
library(gridExtra)
library(xtable)
source('reg_analysis.R')
write_document = FALSE
star <- function(p){
if(p < 0.001){
star = '$^{***}$'
} else if(p < 0.01){
star = '$^{**}$'
} else if(p < 0.05){
star = '$^{*}$'
} else {
star = ''
}
return(star)
}
make_ci_tab <- function(data, add_var_name = FALSE){
tab <- data['coef']
tab$Coef <- paste0(formatC(data$coef, digits = 3, format = "f"),
mapply(star,data$p_value))
tab$`95\\% CI` <- paste0('[',formatC(data$lower_bound, digits=3, format="f"),
', ',formatC(data$upper_bound, digits=3, format="f"),
']')
if(add_var_name == TRUE){
tab$var_name = rownames(tab)
}
return(tab[,-1])
}
write_reg_tab <- function(filename,
tab,var_name = NULL,
document = FALSE,
output = TRUE,
addtorow = NULL){
begin_doc <- "%\n\\documentclass{standalone}\n \\begin{document}"
end_doc <- '\\end{document}'
if(!is.null(var_name)){
rownames(tab) <- var_name
}
table <- xtable(tab)
align(table) <- c('l',rep('c',ncol(tab)))
reg_table <-print.xtable(table,
#hline.after = c(-1, 0, nrow(tab)),
#table.placement = "h",
floating = FALSE,
sanitize.text.function = function(x) {x},
include.colnames = FALSE,
add.to.row = addtorow)
if(document == TRUE){
reg_table <- paste0(begin_doc,str_split(reg_table, '\n', n = 2)[[1]][2],end_doc)
}
if(output == TRUE){
write(reg_table, file = filename)
}
}
# ----------------------------------
#         Baseline Table
# ----------------------------------
var_name_immed <- c('$M$',
'$X_v$',
'$\\textbf{1}\\{X_c = X_{mid}\\}$',
'$\\textbf{1}\\{X_c = X_{high}\\}$',
'$\\textbf{1}\\{T = T_{mid}\\}$',
'$\\textbf{1}\\{T = T_{high}\\}$',
'$X_v\\cdot\\textbf{1}\\{X_c = X_{mid}\\}$',
'$X_v\\cdot\\textbf{1}\\{X_c = X_{high}\\}$',
'$X_v\\cdot\\textbf{1}\\{T = T_{mid}\\}$',
'$X_v\\cdot\\textbf{1}\\{T = T_{high}\\}$')
var_name_delayed <- c('$M$',
'$X_v$',
'$\\textbf{1}\\{X_c = X_{mid}\\}$',
'$\\textbf{1}\\{X_c = X_{high}\\}$',
'$X_v\\cdot\\textbf{1}\\{X_c = X_{mid}\\}$',
'$X_v\\cdot\\textbf{1}\\{X_c = X_{high}\\}$')
# Panel A: Immed_Rw_Vary
firth_result_immed <- read.csv('firth_result_immed.csv')[,-1]
tab1 <- make_ci_tab(fe_logit1)[-1,]
tab2 <- make_ci_tab(firth_result_immed)
tab_baseline_a <- cbind(tab1,tab2)
remove(tab1,tab2)
row_mod <- sprintf(" & \\multicolumn{2}{c}{%s} & \\multicolumn{2}{c}{%s} \\\\",
"(1) MLE",
"(2) Firth's estimator")
row_name <- "& Coef & 95\\% CI & Coef & 95\\% CI \\\\"
row_obs <- sprintf("\\hline observations & \\multicolumn{2}{c}{%d} & \\multicolumn{2}{c}{%d} \\\\",
nrow(df_time_immed),
nrow(df_time_immed))
addtorow <- list()
addtorow$pos <- list(0,0,nrow(tab_baseline_a))
addtorow$command  <- as.vector(c(row_mod,row_name,row_obs),mode='character')
write_reg_tab('./tables/baseline_A.tex',tab_baseline_a,
var_name=var_name_immed,
document=write_document,
addtorow = addtorow)
# Panel B: Delayed_Rw_Vary
firth_result_delayed <- read.csv('firth_result_delayed.csv')[,-1]
tab1 <- make_ci_tab(fe_logit2)[-1,]
tab2 <- make_ci_tab(firth_result_delayed)
tab_baseline_b <- cbind(tab1,tab2)
remove(tab1,tab2)
row_obs <- sprintf("\\hline observations & \\multicolumn{2}{c}{%d} & \\multicolumn{2}{c}{%d} \\\\",
nrow(df_time_delayed),
nrow(df_time_delayed))
addtorow <- list()
addtorow$pos <- list(0,0,nrow(tab_baseline_b))
addtorow$command  <- as.vector(c(row_mod,row_name,row_obs),mode='character')
write_reg_tab('./tables/baseline_B.tex',tab_baseline_b,
var_name=var_name_delayed,
document=write_document,
addtorow = addtorow)
print('Baseline model: table made')
# Plots: Immed_Rw_Vary
firth_pred_immed <- read.csv('firth_pred_immed.csv')[,-1]
tab_immed <- df_time_immed %>%
group_by(b_vary_rw,a_rw,b_fixed_rw,b_delay) %>%
summarise(mean_choice = mean(choice),
pred_logit = mean(pred_logit),
pred_logit_u = mean(pred_logit_u),
pred_logit_a = mean(pred_logit_a),
pred_logit_c = mean(pred_logit_c)
) %>%
left_join(firth_pred_immed) %>%
mutate(b_vary_rw = b_vary_rw*10,
b_fixed_rw = b_fixed_rw*10,
a_rw = a_rw*10)
fig_immed_1 <- ggplot(data = tab_immed[tab_immed$a_rw == unique(tab_immed$a_rw)[1],],
aes(x = b_vary_rw,
y = mean_choice,
color = factor(b_fixed_rw),
shape = factor(b_delay))) +
geom_point(size=2)+
geom_line(aes(y=pred_logit_c),linetype = 'dashed',alpha=0.75)+
ggtitle(paste0('(1) single-reward option: £',unique(tab_immed$a_rw)[1], ''))+
labs(x = "immediate reward in sequence option (£)",
y = "probability of choosing the sequence")+
scale_x_continuous(breaks = c(1:10)*10) +
scale_shape_discrete(name = "time length of sequence (month)") +
scale_color_discrete(name = "delayed reward in sequence option (£)") +
theme_bw(12)+
theme(
legend.position = "bottom",
legend.box = "vertical",
legend.spacing.y = unit(-0.2, "cm"),
legend.key.width = unit(0.3, "cm"),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title.y = element_text(margin = margin(r = 8)),
text = element_text(family = "Times New Roman")
)
fig_immed_2 <- ggplot(data = tab_immed[tab_immed$a_rw == unique(tab_immed$a_rw)[2],],
aes(x = b_vary_rw,
y = mean_choice,
color = factor(b_fixed_rw),
shape = factor(b_delay))) +
geom_point(size=2)+
geom_line(aes(y=pred_logit_c),linetype='dashed',alpha=0.75)+
ggtitle(paste0('(2) single-reward option: £',unique(tab_immed$a_rw)[2], ''))+
labs(x = "immediate reward in sequence option (£)",
y = "")+
scale_x_continuous(breaks = c(1:10)*10) +
scale_shape_discrete(name = "time length of sequence (month)") +
scale_color_discrete(name = "delayed reward in sequence option (£)") +
theme_bw(12)+
theme(
legend.position = "bottom",
legend.box = "vertical",
legend.spacing.y = unit(-0.2, "cm"),
legend.key.width = unit(0.3, "cm"),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title.y = element_text(margin = margin(r = 8)),
text = element_text(family = "Times New Roman")
)
panel_immed <- ggarrange(fig_immed_1, fig_immed_2,
ncol = 2, common.legend = TRUE, legend="bottom")
panel_immed
tab_immed
df_time_immed
df_censor_immed
firth_pred_immed
tab_immed <- df_censor_immed %>%
group_by(b_vary_rw,a_rw,b_fixed_rw,b_delay) %>%
summarise(mean_choice = log(mean(choice)/(1-mean(choice))),
pred_logit = log(mean(pred_logit)/(1-mean(pred_logit))),
pred_logit_u = log(mean(pred_logit_u)/(1-mean(pred_logit_u))),
pred_logit_a = log(mean(pred_logit_a)/(1-mean(pred_logit_a))),
pred_logit_c = log(mean(pred_logit_c)/(1-mean(pred_logit_c)))
) %>%
left_join(firth_pred_immed) %>%
mutate(b_vary_rw = b_vary_rw*10,
b_fixed_rw = b_fixed_rw*10,
a_rw = a_rw*10)
tab_immed <- df_censor_immed %>%
group_by(b_vary_rw,a_rw,b_fixed_rw,b_delay) %>%
summarise(mean_choice = log(mean(choice)/(1-mean(choice))),
pred_logit = log(mean(pred_logit)/(1-mean(pred_logit))),
pred_logit_u = log(mean(pred_logit_u)/(1-mean(pred_logit_u))),
pred_logit_a = log(mean(pred_logit_a)/(1-mean(pred_logit_a))),
pred_logit_c = log(mean(pred_logit_c)/(1-mean(pred_logit_c)))
) %>%
left_join(firth_pred_immed) %>%
mutate(b_vary_rw = b_vary_rw*10,
b_fixed_rw = b_fixed_rw*10,
a_rw = a_rw*10)
df_censor_immed
str(df_censor_immed)
df_censor_immed$pred_logit_c <- predict(logit_c1,type='response',newdata=df_time_immed)
df_censor_immed$pred_logit_c <- predict(logit_c1,type='response',newdata=df_censor_immed)
tab_immed2 <- df_censor_immed %>%
group_by(b_vary_rw,a_rw,b_fixed_rw,b_delay) %>%
summarise(mean_choice = log(mean(choice)/(1-mean(choice))),
pred_logit = log(mean(pred_logit)/(1-mean(pred_logit))),
pred_logit_u = log(mean(pred_logit_u)/(1-mean(pred_logit_u))),
pred_logit_a = log(mean(pred_logit_a)/(1-mean(pred_logit_a))),
pred_logit_c = log(mean(pred_logit_c)/(1-mean(pred_logit_c)))
) %>%
left_join(firth_pred_immed) %>%
mutate(b_vary_rw = b_vary_rw*10,
b_fixed_rw = b_fixed_rw*10,
a_rw = a_rw*10)
ggplot(data = tab_immed2[tab_immed2$a_rw == unique(tab_immed2$a_rw)[1],],
aes(x = b_vary_rw,
y = mean_choice,
color = factor(b_fixed_rw),
shape = factor(b_delay))) +
geom_point(size=2)+
geom_line(aes(y=pred_logit_c),linetype = 'dashed',alpha=0.75)+
ggtitle(paste0('(1) single-reward option: £',unique(tab_immed$a_rw)[1], ''))+
labs(x = "immediate reward in sequence option (£)",
y = "probability of choosing the sequence")+
scale_x_continuous(breaks = c(1:10)*10) +
scale_shape_discrete(name = "time length of sequence (month)") +
scale_color_discrete(name = "delayed reward in sequence option (£)") +
theme_bw(12)+
theme(
legend.position = "bottom",
legend.box = "vertical",
legend.spacing.y = unit(-0.2, "cm"),
legend.key.width = unit(0.3, "cm"),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title.y = element_text(margin = margin(r = 8)),
text = element_text(family = "Times New Roman")
)
df_censor_immed$pred_logit_c <- predict(logit_c1,newdata=df_censor_immed)
tab_immed2 <- df_censor_immed %>%
group_by(b_vary_rw,a_rw,b_fixed_rw,b_delay) %>%
summarise(mean_choice = log(mean(choice)/(1-mean(choice))),
pred_logit = log(mean(pred_logit)/(1-mean(pred_logit))),
pred_logit_u = log(mean(pred_logit_u)/(1-mean(pred_logit_u))),
pred_logit_a = log(mean(pred_logit_a)/(1-mean(pred_logit_a))),
pred_logit_c = pred_logit_c
) %>%
left_join(firth_pred_immed) %>%
mutate(b_vary_rw = b_vary_rw*10,
b_fixed_rw = b_fixed_rw*10,
a_rw = a_rw*10)
tab_immed2 <- df_censor_immed %>%
group_by(b_vary_rw,a_rw,b_fixed_rw,b_delay) %>%
summarise(mean_choice = log(mean(choice)/(1-mean(choice))),
pred_logit = log(mean(pred_logit)/(1-mean(pred_logit))),
pred_logit_u = log(mean(pred_logit_u)/(1-mean(pred_logit_u))),
pred_logit_a = log(mean(pred_logit_a)/(1-mean(pred_logit_a))),
pred_logit_c = mean(pred_logit_c)
) %>%
left_join(firth_pred_immed) %>%
mutate(b_vary_rw = b_vary_rw*10,
b_fixed_rw = b_fixed_rw*10,
a_rw = a_rw*10)
ggplot(data = tab_immed2[tab_immed2$a_rw == unique(tab_immed2$a_rw)[1],],
aes(x = b_vary_rw,
y = mean_choice,
color = factor(b_fixed_rw),
shape = factor(b_delay))) +
geom_point(size=2)+
geom_line(aes(y=pred_logit_c),linetype = 'dashed',alpha=0.75)+
ggtitle(paste0('(1) single-reward option: £',unique(tab_immed$a_rw)[1], ''))+
labs(x = "immediate reward in sequence option (£)",
y = "probability of choosing the sequence")+
scale_x_continuous(breaks = c(1:10)*10) +
scale_shape_discrete(name = "time length of sequence (month)") +
scale_color_discrete(name = "delayed reward in sequence option (£)") +
theme_bw(12)+
theme(
legend.position = "bottom",
legend.box = "vertical",
legend.spacing.y = unit(-0.2, "cm"),
legend.key.width = unit(0.3, "cm"),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title.y = element_text(margin = margin(r = 8)),
text = element_text(family = "Times New Roman")
)
ggplot(data = tab_immed2[tab_immed2$a_rw == unique(tab_immed2$a_rw)[1],],
aes(x = b_vary_rw,
y = mean_choice,
color = factor(b_fixed_rw),
shape = factor(b_delay))) +
geom_point(size=2)+
geom_line(aes(y=mean_choice),linetype = 'dashed',alpha=0.75)+
ggtitle(paste0('(1) single-reward option: £',unique(tab_immed$a_rw)[1], ''))+
labs(x = "immediate reward in sequence option (£)",
y = "probability of choosing the sequence")+
scale_x_continuous(breaks = c(1:10)*10) +
scale_shape_discrete(name = "time length of sequence (month)") +
scale_color_discrete(name = "delayed reward in sequence option (£)") +
theme_bw(12)+
theme(
legend.position = "bottom",
legend.box = "vertical",
legend.spacing.y = unit(-0.2, "cm"),
legend.key.width = unit(0.3, "cm"),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title.y = element_text(margin = margin(r = 8)),
text = element_text(family = "Times New Roman")
)
