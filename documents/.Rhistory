tinytex::install_tinytex()
rmarkdown::render("lifecycleCN.Rmd", params = "ask")
rmarkdown::render("lifecycleCN.Rmd", params = "ask")
rmarkdown::render("lifecycleCN.Rmd", params = "ask")
rmarkdown::render("lifecycleCN.Rmd", params = "ask")
rmarkdown::render("lifecycleCN.Rmd", params = "ask")
rmarkdown::render("E:/Research Interest/lifecycle/rmarkdown/lifecycleCN.Rmd", params = "ask")
install.packages(xaringan)
install.packages('xaringan')
install.packages("bookdown")
install.packages("bookdown")
xaringan::inf_mr()
xaringan::inf_mr()
argument "moon" is missing, with no default
xaringan::inf_mr()
library(xaringan)
?xaringan::moon_reader
xaringan::inf_mr()
devtools::install_github('yihui/xaringan')
install.packages('devtools')
library(rmarkdown)
pandoc_merge(c("attention_discounting.md", "appendix.md"), "output.Rmd")
rmarkdown::pandoc_merge(c("attention_discounting.md", "appendix.md"), "output.Rmd")
tinytex::reinstall_tinytex(repository = "illinois")
tinytex::reinstall_tinytex(repository = "illinois")
11*0.05
11*0.056
85*0.056
85*0.05
85*0.055
85/11
4.7/0.6
4/6/0.6
4.6/0.6
1/e
1/exp{1}
exp(1)
1/exp(3)
exp(-3)
exp(-6)
1/6
---
title: "Empirical Test"
1.03^10
1.03^2
library(tidyverse)
library(haven)
read_dta('E:\[Data analysis Example]\CHFS\chfs2011_ind_20191120_version14')
read_dta('E:/[Data analysis Example]/CHFS/chfs2011_ind_20191120_version14')
read_dta('E:/[Data analysis Example]/CHFS/chfs2011_ind_20191120_version14.dta')
dt_2011 <- read_dta('E:/[Data analysis Example]/CHFS/chfs2011_ind_20191120_version14.dta')
dt_2011
View(dt_2011)
str(dt_2011)
dt_2011$labor_inc
dt_2011$labor_inc
dt_2011$labor_inc
# 2008 tax
tax_excluded_inc_limit <- c(475,1825,4375,16375,31375,45375,58375,70375)
deduct <- c(0,25,125,375,1375,3375,6375,10375,15375)
tax_rate <- c(5,10,15,20,25,30,35,40,45)
# 2008 tax
min_tax_inc <- 2000
tax_excluded_inc_limit <- c(0,475,1825,4375,16375,31375,45375,58375,70375)
deduct <- c(0,25,125,375,1375,3375,6375,10375,15375)
tax_rate <- c(5,10,15,20,25,30,35,40,45)
findInterval(inc-min_tax_inc,tax_excluded_inc_limit)
inc = 6000
findInterval(inc-min_tax_inc,tax_excluded_inc_limit)
idx <- findInterval(inc-min_tax_inc,tax_excluded_inc_limit)
deduct[idx]
idx <- findInterval(inc-min_tax_inc,tax_excluded_inc_limit)
(inc - deduct[idx] - min_tax_inc* tax_rate[idx])/(1-tax_rate[idx])
tax_rate <- c(5,10,15,20,25,30,35,40,45)*0.01
inc = 6000
idx <- findInterval(inc-min_tax_inc,tax_excluded_inc_limit)
(inc - deduct[idx] - min_tax_inc* tax_rate[idx])/(1-tax_rate[idx])
# 2008 tax
dt_year = 2011
if(dt_year<=2011){
min_tax_inc <- 2000
tax_excluded_inc_limit <- c(0,475,1825,4375,16375,31375,45375,58375,70375)
deduct <- c(0,25,125,375,1375,3375,6375,10375,15375)
tax_rate <- c(5,10,15,20,25,30,35,40,45)*0.01
} else if(dt_year){}
inc = 6000
idx <- findInterval(inc-min_tax_inc,tax_excluded_inc_limit)
(inc - deduct[idx] - min_tax_inc* tax_rate[idx])/(1-tax_rate[idx])
tax_code_08 <- list(min_tax_inc <- 2000,
tax_excluded_inc_limit <- c(0,475,1825,4375,16375,31375,45375,58375,70375),
deduct <- c(0,25,125,375,1375,3375,6375,10375,15375),
tax_rate <- c(5,10,15,20,25,30,35,40,45)*0.01
)
tax_code_11 <- list(min_tax_inc <- 3500,
tax_excluded_inc_limit <- c(0,1455,4155,8155,27655,41655,57905),
deduct <- c(0,105,555,1005,2755,5505,13505),
tax_rate <- c(3,10,20,25,30,35,45)*0.01
)
before_tax_inc <- function(inc,dt_year){
if(dt_year<=2011){
tax_code = tax_code_08
} else if(dt_year<=2018){
tax_code = tax_code_11
}
if(inc < min_tax_inc){
y = inc
} else{
idx = findInterval(inc-tax_code$min_tax_inc,tax_code$post_tax_inc_limit)
y = (inc - tax_code$deduct[idx] - tax_code$min_tax_inc*tax_code$tax_rate[idx])/(1-tax_code$tax_rate[idx])
}
return(y)
}
before_tax_inc(100000,2017)
before_tax_inc(100000,2015)
tax_code_11
tax_code_11$min_tax_inc
tax_code_08 <- list(min_tax_inc = 2000,
post_tax_inc_limit = c(0,475,1825,4375,16375,31375,45375,58375,70375),
deduct = c(0,25,125,375,1375,3375,6375,10375,15375),
tax_rate = c(5,10,15,20,25,30,35,40,45)*0.01
)
tax_code_08
tax_code_11 <- list(min_tax_inc = 3500,
post_tax_inc_limit = c(0,1455,4155,8155,27655,41655,57905),
deduct = c(0,105,555,1005,2755,5505,13505),
tax_rate = c(3,10,20,25,30,35,45)*0.01
)
before_tax_inc <- function(inc,dt_year){
if(dt_year<=2011){
tax_code = tax_code_08
} else if(dt_year<=2018){
tax_code = tax_code_11
}
if(inc < min_tax_inc){
y = inc
} else{
idx = findInterval(inc-tax_code$min_tax_inc,tax_code$post_tax_inc_limit)
y = (inc - tax_code$deduct[idx] - tax_code$min_tax_inc*tax_code$tax_rate[idx])/(1-tax_code$tax_rate[idx])
}
return(y)
}
before_tax_inc(100000,2015)
before_tax_inc(100000,2015)
before_tax_inc(c(100000,40000),2015)
# magnitude effect
u_seq = c(1:80)*0.1
t_1 = 16
t_2 = 8
du_1 <- w(u=u_seq,t=t_1,lambda=.6)* u_seq
du_2 <- w(u=u_seq,t=t_2,lambda=.6)* u_seq
d1 <- tibble(du = du_1, u = u_seq, t = t_1)
d2 <- tibble(du = du_2, u = u_seq, t = t_2)
d_union <- bind_rows(d1,d2)
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line()+
theme_bw(11)+
labs(color="T")+
ylab("discounted utility")+
xlab(expression(u(x[T])))
# magnitude effect
library(ggplot2)
u_seq = c(1:80)*0.1
t_1 = 16
t_2 = 8
du_1 <- w(u=u_seq,t=t_1,lambda=.6)* u_seq
du_2 <- w(u=u_seq,t=t_2,lambda=.6)* u_seq
d1 <- tibble(du = du_1, u = u_seq, t = t_1)
d2 <- tibble(du = du_2, u = u_seq, t = t_2)
d_union <- bind_rows(d1,d2)
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line()+
theme_bw(11)+
labs(color="T")+
ylab("discounted utility")+
xlab(expression(u(x[T])))
g <- function(t){
1/(1-delta)*(delta^(-t)-1)
}
w <- function(u,t,lambda=1){
1 / (1+g(t)*exp(-u/lambda))
}
delta = .75
u_l = 5
u_s = 1
t_seq = 0:10
library(tidyverse)
ll_d <- tibble(w = w(u_l,t_seq), reward = "LL", t = t_seq)
ss_d <- tibble(w = w(u_s,t_seq), reward = "SS", t = t_seq)
d <- bind_rows(ll_d,ss_d)
# common difference effect
ggplot(data = d,aes(x = t,y = w, color = reward))+
geom_line()+
theme_bw(11)+
xlab("T")+
ylab(expression(w[T]))+
theme(axis.title = element_text(face = 'italic'))+
scale_x_continuous(breaks = c(0:5)*2)
# magnitude effect
u_seq = c(1:80)*0.1
t_1 = 16
t_2 = 8
du_1 <- w(u=u_seq,t=t_1,lambda=.6)* u_seq
du_2 <- w(u=u_seq,t=t_2,lambda=.6)* u_seq
d1 <- tibble(du = du_1, u = u_seq, t = t_1)
d2 <- tibble(du = du_2, u = u_seq, t = t_2)
d_union <- bind_rows(d1,d2)
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line()+
theme_bw(11)+
labs(color="T")+
ylab("discounted utility")+
xlab(expression(u(x[T])))
v <- function(x){
x^0.6
}
# magnitude effect
x_seq = c(1:80)*0.1
u_seq = v(x_seq)
t_1 = 16
t_2 = 8
du_1 <- w(u=u_seq,t=t_1,lambda=.6)* u_seq
du_2 <- w(u=u_seq,t=t_2,lambda=.6)* u_seq
d1 <- tibble(du = du_1, u = u_seq, t = t_1)
d2 <- tibble(du = du_2, u = u_seq, t = t_2)
d_union <- bind_rows(d1,d2)
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line()+
theme_bw(11)+
labs(color="T")+
ylab("discounted utility")+
xlab(expression(u(x[T])))
t_1 = 16
t_2 = 8
du_1 <- w(u=u_seq,t=t_1,lambda=1)* u_seq
du_2 <- w(u=u_seq,t=t_2,lambda=1)* u_seq
d1 <- tibble(du = du_1, u = u_seq, t = t_1)
d2 <- tibble(du = du_2, u = u_seq, t = t_2)
d_union <- bind_rows(d1,d2)
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line()+
theme_bw(11)+
labs(color="T")+
ylab("discounted utility")+
xlab(expression(u(x[T])))
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line()+
theme_bw(11)+
labs(color="T")+
ylab("discounted utility")+
xlab(expression((x[T])))
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line()+
theme_bw(11)+
labs(color="T")+
ylab("weighted utility")+
xlab(expression((x[T])))
# magnitude effect
x_seq = c(1:100)
u_seq = v(x_seq)
t_1 = 16
t_2 = 8
du_1 <- w(u=u_seq,t=t_1,lambda=1)* u_seq
du_2 <- w(u=u_seq,t=t_2,lambda=1)* u_seq
d1 <- tibble(du = du_1, u = u_seq, t = t_1)
d2 <- tibble(du = du_2, u = u_seq, t = t_2)
d_union <- bind_rows(d1,d2)
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line()+
theme_bw(11)+
labs(color="T")+
ylab("weighted utility")+
xlab(expression((x[T])))
# magnitude effect
x_seq = c(1:80)
u_seq = v(x_seq)
t_1 = 16
t_2 = 8
du_1 <- w(u=u_seq,t=t_1,lambda=1)* u_seq
du_2 <- w(u=u_seq,t=t_2,lambda=1)* u_seq
d1 <- tibble(du = du_1, u = u_seq, t = t_1)
d2 <- tibble(du = du_2, u = u_seq, t = t_2)
d_union <- bind_rows(d1,d2)
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line()+
theme_bw(11)+
labs(color="T")+
ylab("weighted utility")+
xlab(expression((x[T])))
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line()+
theme_bw(11)+
labs(color="T")+
ylab("weighted utility")+
xlab(expression(x[T]))
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line()+
theme_bw(11)+
labs(color="T")+
ylab("weighted utility")+
xlab("reward")+
labs(fill="delay")
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line()+
theme_bw(11)+
labs(color="T")+
ylab("weighted utility")+
xlab("reward")+
labs(color="delay")
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line()+
theme_bw(15)+
labs(color="T")+
ylab("weighted utility")+
xlab("reward")+
labs(color="delay")
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line(size=1)+
theme_bw(15)+
labs(color="T")+
ylab("weighted utility")+
xlab("reward")+
labs(color="delay")
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line(size=1)+
theme_bw(17)+
labs(color="T")+
ylab("weighted utility")+
xlab("reward")+
labs(color="delay")
ggplot(d= d_union, aes(x = u,y = du, color =factor(t)))+
geom_line(size=1)+
theme_bw(18)+
labs(color="T")+
ylab("weighted utility")+
xlab("reward")+
labs(color="delay")
library(ggplot2)
library(extrafont)
fonts()
k <- 10
drift <- 0.1
diffusion_sd <- 1
z <- c(0)
new_z <- 0
while(abs(new_z) < k){
z <- c(z,new_z)
diffusion <- rnorm(1,sd=diffusion_sd)
d_z <- drift + diffusion
new_z <- new_z + d_z
}
z <- c(z,k)[-1]
trial <- data.frame(t=1:length(z),z=z)
ggplot(data = trial)+
geom_line(aes(x=t,y=z),color='violet',size=0.8)+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 10)+
geom_hline(yintercept = -10)+
scale_y_continuous(breaks = c(-10, 0, 10),
labels = c(expression(italic(-b)), "0", expression(italic(b))))+
labs(y = expression(italic(Z[h] - Z[l])),x=expression(italic(t)))+
theme_classic()+
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10),
text = element_text(family = "Times New Roman"))
new_z <- 0
z <- c(0)
new_z <- 0
while(abs(new_z) < k){
z <- c(z,new_z)
diffusion <- rnorm(1,sd=diffusion_sd)
d_z <- drift + diffusion
new_z <- new_z + d_z
}
z <- c(z,k)[-1]
trial <- data.frame(t=1:length(z),z=z)
ggplot(data = trial)+
geom_line(aes(x=t,y=z),color='violet',size=0.8)+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 10)+
geom_hline(yintercept = -10)+
scale_y_continuous(breaks = c(-10, 0, 10),
labels = c(expression(italic(-b)), "0", expression(italic(b))))+
labs(y = expression(italic(Z[h] - Z[l])),x=expression(italic(t)))+
theme_classic()+
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10),
text = element_text(family = "Times New Roman"))
z <- c(0)
new_z <- 0
while(abs(new_z) < k){
z <- c(z,new_z)
diffusion <- rnorm(1,sd=diffusion_sd)
d_z <- drift + diffusion
new_z <- new_z + d_z
}
z <- c(z,k)[-1]
trial <- data.frame(t=1:length(z),z=z)
ggplot(data = trial)+
geom_line(aes(x=t,y=z),color='violet',size=0.8)+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 10)+
geom_hline(yintercept = -10)+
scale_y_continuous(breaks = c(-10, 0, 10),
labels = c(expression(italic(-b)), "0", expression(italic(b))))+
labs(y = expression(italic(Z[h] - Z[l])),x=expression(italic(t)))+
theme_classic()+
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10),
text = element_text(family = "Times New Roman"))
ggplot(data = trial)+
geom_line(aes(x=t,y=z),color='violet',size=0.8)+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 10)+
geom_hline(yintercept = -10)+
scale_y_continuous(breaks = c(-10, 0, 10),
labels = c(expression(italic(-b)), "0", expression(italic(b))))+
labs(y = expression(italic(Z^h[t] - Z^l[t])),x=expression(italic(t)))+
theme_classic()+
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10),
text = element_text(family = "Times New Roman"))
ggplot(data = trial)+
geom_line(aes(x=t,y=z),color='violet',size=0.8)+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 10)+
geom_hline(yintercept = -10)+
scale_y_continuous(breaks = c(-10, 0, 10),
labels = c(expression(italic(-b)), "0", expression(italic(b))))+
labs(y = expression(italic(Z^h_[t] - Z^l_[t])),x=expression(italic(t)))+
theme_classic()+
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10),
text = element_text(family = "Times New Roman"))
ggplot(data = trial)+
geom_line(aes(x=t,y=z),color='violet',size=0.8)+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 10)+
geom_hline(yintercept = -10)+
scale_y_continuous(breaks = c(-10, 0, 10),
labels = c(expression(italic(-b)), "0", expression(italic(b))))+
labs(y = expression(italic(Z[t]^h - Z[t]^l)),x=expression(italic(t)))+
theme_classic()+
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10),
text = element_text(family = "Times New Roman"))
ggsave('plot_DDM.png',device='png',width=4.6, height=2.5)
ggplot(data = trial)+
geom_line(aes(x=t,y=z),color='violet',size=0.8)+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 10)+
geom_hline(yintercept = -10)+
scale_y_continuous(breaks = c(-10, 0, 10),
labels = c(expression(italic(-b)), "0", expression(italic(b))))+
labs(y = expression((Z[t]^h - Z[t]^l)),x=expression(italic(t)))+
theme_classic()+
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10),
text = element_text(family = "Times New Roman"))
ggplot(data = trial)+
geom_line(aes(x=t,y=z),color='violet',size=0.8)+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 10)+
geom_hline(yintercept = -10)+
scale_y_continuous(breaks = c(-10, 0, 10),
labels = c(expression(italic(-b)), "0", expression(italic(b))))+
labs(y = expression(Z[t]^italic(h) - Z[t]^italic(l)),x=expression(italic(t)))+
theme_classic()+
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10),
text = element_text(family = "Times New Roman"))
ggsave('plot_DDM.png',device='png',width=4.6, height=2.5)
